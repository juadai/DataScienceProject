fitdis2 = fitdist(DBHdata$Tree.growth, "gamma")
summary(fitdis1); summary(fitdis2)
par(mfrow = c(2, 2))
denscomp(list(fitdis1, fitdis2), legendtext = c("Normal","Gamma"))
qqcomp(list(fitdis1, fitdis2), legendtext = c("Normal","Gamma"))
cdfcomp(list(fitdis1, fitdis2), legendtext = c("Normal","Gamma"))
ppcomp(list(fitdis1, fitdis2), legendtext = c("Normal","Gamma"))
# Gamma better describes "Tree.growth" than normal, but the positive tail still doesn't fit
fitdis3 = fitdist(log(DBHdata$Tree.growth), "norm")
summary(fitdis3)
par(mfrow = c(2, 2))
denscomp(fitdis3, legendtext = "Normal")
qqcomp(fitdis3, legendtext = "Normal")
cdfcomp(fitdis3, legendtext = "Normal")
ppcomp(fitdis3, legendtext = "Normal")
# log(Tree.growth) can roughly be normal
summary(DBHdata$DBH.year.0)
var(DBHdata$DBH.year.0) # quite large variance, variance = twice mean
hist(DBHdata$DBH.year.0, breaks = 100)
# super rough comparison
set.seed(0)
hist(DBHdata$DBH.year.0, breaks = 100)
hist(rnorm(400, 35, 5), breaks = 40, add = TRUE, col = "light blue")
# DBH.year.0 has too many values within 20-30 to fit a normal shape
descdist(DBHdata$DBH.year.0)
fitdis4 = fitdist(DBHdata$DBH.year.0, "norm")
summary(fitdis4)
par(mfrow = c(2, 2))
denscomp(fitdis4, legendtext = "Normal")
qqcomp(fitdis4, legendtext = "Normal")
cdfcomp(fitdis4, legendtext = "Normal")
ppcomp(fitdis4, legendtext = "Normal")
# DBH.yea.0 is not quite like normal distribution, its distribution is also quite different from Tree.growth
# curve shape in the QQplot->maybe some transformation will make it closer to normal
# best model derived from Tree.growth~DBH.year.0*Large*Treatment
glm1.0 = glm(Tree.growth~-1+DBH.year.0+Large+DBH.year.0:Large+Treatment:Large, data = DBHdata)
summary(glm1.0)
tss = sum((DBHdata$Tree.growth-mean(DBHdata$Tree.growth))^2) #TSS
rss = sum((DBHdata$Tree.growth-fitted(glm1.0))^2) #RSS
tss; rss
(tss-rss)/tss #R^2
plot(glm1.0)
plot(DBHdata$Tree.growth, fitted(glm1.0), type = "p", col = DBHdata$Treatment)
abline(0, 1)
# better than glm1.0, with increased Rsquare value and much smaller and "flat" residuals, but still not a good enough model for Tree.growth
glm2.0 = glm(Tree.growth~Treatment+Large+DBH.year.0+Treatment:DBH.year.0+Large:DBH.year.0, family = "Gamma", data = DBHdata)
summary(glm2.0)
tss = sum((DBHdata$Tree.growth-mean(DBHdata$Tree.growth))^2) #TSS
rss = sum((DBHdata$Tree.growth-fitted(glm2.0))^2) #RSS
tss; rss
(tss-rss)/tss #R^2
plot(glm2.0)
plot(DBHdata$Tree.growth, fitted(glm2.0), type = "p", col = DBHdata$Treatment)
abline(0, 1)
# view instances marked as outliers in the residual plots and Cook's distance plots in both glm1.0 and glm2.0
DBHdata[c("198","141","393","96","81","156"), ] # 4 outof 6 has large Tree.growth > 8
DBHdrop = subset(DBHdata, !(Tree.Number == 225 | Tree.Number == 478 | Tree.Number == 496 | Tree.Number == 71 | Tree.Number == 77 | Tree.Number == 184))
glm1.1 = glm(Tree.growth~-1+DBH.year.0+Large+Treatment+DBH.year.0:Large+Treatment:Large, data = DBHdrop)
summary(glm1.1)
tss = sum((DBHdrop$Tree.growth-mean(DBHdrop$Tree.growth))^2) #TSS
rss = sum((DBHdrop$Tree.growth-fitted(glm1.1))^2) #RSS
tss; rss
(tss-rss)/tss #R^2
plot(glm1.1)
plot(DBHdrop$Tree.growth, fitted(glm1.1), type = "p", col = DBHdrop$Treatment)
abline(0, 1)
glm2.1 = glm(Tree.growth~Treatment+Large+DBH.year.0+Treatment:DBH.year.0+Large:DBH.year.0, family = "Gamma", data = DBHdrop)
summary(glm2.1)
tss = sum((DBHdrop$Tree.growth-mean(DBHdrop$Tree.growth))^2) #TSS
rss = sum((DBHdrop$Tree.growth-fitted(glm2.1))^2) #RSS
tss; rss
(tss-rss)/tss #R^2
plot(glm2.1)
plot(DBHdrop$Tree.growth, fitted(glm2.1), type = "p", col = DBHdrop$Treatment)
abline(0, 1)
glm(DBH.year.6~Treatment+Large+DBH.year.0+Large:DBH.year.0+Treatment:Large, data = DBHremove)
glm(DBH.year.6~Treatment+Large+DBH.year.0+Large:DBH.year.0+Treatment:Large, data = DBHremove)
glm(DBH.year.6~Treatment+Large+DBH.year.0+Large:DBH.year.0+Treatment:Large, data = DBHdrop)
plot(m)
m <- glm(DBH.year.6~Treatment+Large+DBH.year.0+Large:DBH.year.0+Treatment:Large, data = DBHdrop)
plot(m)
m <- glm(log(DBH.year.6)~Treatment+Large+log(DBH.year.0)+Large:log(DBH.year.0)+Treatment:Large, data = DBHdrop)
plot(m)
summary(m)
m <- glm(log(DBH.year.6)~Treatment+Large+log(DBH.year.0), data = DBHdrop)
plot(m)
summary(m)
plot(m)
m <- glm(log(DBH.year.6)~(Treatment+Large+log(DBH.year.0))^2, data = DBHdrop)
plot(m)
summary(m)
m <- glm(log(DBH.year.6)~(Treatment+Large+log(DBH.year.0))^2, data = DBHdrop)
plot(m)
summary(m)
DBHdrop = DBHdrop[-c(412,95,157),]
m <- glm(log(DBH.year.6)~(Treatment+Large+log(DBH.year.0))^2, data = DBHdrop)
plot(m)
summary(m)
plot(m)
DBHdrop = DBHdrop[-c(412,95,157)]
m <- glm(log(DBH.year.6)~(Treatment+Large+log(DBH.year.0))^2, data = DBHdrop)
plot(m)
m <- glm(log(DBH.year.6)~(Treatment+Large+log(DBH.year.0))^2, data = DBHdrop)
plot(m)
summary(m)
DBHdrop = DBHdrop[-c(412,95,157)]
m <- glm(log(DBH.year.6)~(Treatment+Large+log(DBH.year.0))^2, data = DBHdrop)
plot(m)
m <- glm(log(DBH.year.6)~(Treatment+Large+log(DBH.year.0))^2, data = DBHdrop)
DBHdrop-c(157)
DBHdrop = DBHdrop[-c(157,95,412),]
m <- glm(log(DBH.year.6)~(Treatment+Large+log(DBH.year.0))^2, data = DBHdrop)
plot(m)
View(DBHdrop)
DBHdrop = DBHdrop[!(DBHdrop$id %in% c(157,95,412)),]
DBHdrop = DBHdrop[!(DBHdrop$id %in% c(157,95,412)),]
# view instances marked as outliers in the residual plots and Cook's distance plots in both glm1.0 and glm2.0
DBHdata[c("198","141","393","96","81","156"), ] # 4 outof 6 has large Tree.growth > 8
DBHdrop = subset(DBHdata, !(Tree.Number == 225 | Tree.Number == 478 | Tree.Number == 496 | Tree.Number == 71 | Tree.Number == 77 | Tree.Number == 184))
setwd("C:/Users/YUHONG/Documents/R/DataScienceProject")
data = read.csv("./dataset/all_plots.csv", stringsAsFactors = FALSE)
summary(data)
sapply(data, typeof)
sapply(data[c(2,3,4,5,8,9,10,11,12,13,14,15)], unique)
DBHdata = data[1:9]
# blank "Large", assume "No" where it's blank
DBHdata[DBHdata$Large == "", "Tree.Number"]
DBHdata[DBHdata$Large == "", "Large"] = "No"
# blank "Alive.at.year.6"
DBHdata[DBHdata$Alive.at.year.6 == "", 1:7]
# 20 rows with blank "Alive.at.year.6" have valid values for "DBH.year.6", assume they have "Yes" for "Alive.at.year.6"
DBHdata[DBHdata$Alive.at.year.6 == "" & !(is.na(DBHdata$DBH.year.6)), "Alive.at.year.6"] = "Yes"
# the rest 8 rows with blank "Alive.at.year.6" have NA for "DBH.year.6", not sure whether the trees are not alive, or just missing records in year6, so no modification.
# NA in "DBH.year.6", no modification
DBHdata[is.na(DBHdata$DBH.year.6), 1:7]
# 9 NAs for "DBH.year.6", 8 rows are the rows where "Alive.at.year.6" is blank, and one exception.
# NA in "DBH.year.0", no modification
DBHdata[is.na(DBHdata$DBH.year.0), 1:7] # 2 NAs for "DBH.year.0"
# NA in "Class.year.0" and NA in "Class.year.6", no modification
DBHdata[is.na(DBHdata$Class.year.0) | is.na(DBHdata$Class.year.6), ]
# All NA appears where there's NA for DBH (2 in year0, 9 in year6), but 2 exceptions where there's valid values for DBH:
# both in Plot5(T2: Radial), Tree.Number 148, 149, they have extremely large DBH.
DBHdata$Tree.growth = DBHdata$DBH.year.6 - DBHdata$DBH.year.0
DBHdata[is.na(DBHdata$Tree.growth) | DBHdata$Tree.growth <= 0, ] # rows to be removed
DBHdata = DBHdata[!(is.na(DBHdata$Tree.growth)) & DBHdata$Tree.growth > 0, ]
DBHdata$Treatment = factor(DBHdata$Treatment)
DBHdata$Large = factor(DBHdata$Large)
# best model derived from Tree.growth~DBH.year.0*Large*Treatment
glm1.0 = glm(Tree.growth~DBH.year.0+Treatment+Large+DBH.year.0:Large+Treatment:Large, data = DBHdata)
summary(glm1.0)
tss = sum((DBHdata$Tree.growth-mean(DBHdata$Tree.growth))^2) #TSS
rss = sum((DBHdata$Tree.growth-fitted(glm1.0))^2) #RSS
(tss-rss)/tss #R^2
par(mfrow=c(2,2))
plot(glm1.0)
#plot(DBHdata$Tree.growth, fitted(glm1.0), type = "p", col = DBHdata$Treatment)
#abline(0, 1)
#plot(DBHdata$Tree.growth, fitted(glm1.0), type = "p", col = DBHdata$Large)
#abline(0, 1)
par(mfrow=c(1,2))
plot(DBHdata$Tree.growth~DBHdata$DBH.year.0, type = "p", col = DBHdata$Treatment)
plot(DBHdata$Tree.growth~DBHdata$DBH.year.0, type = "p", col = DBHdata$Large)
DBHdata[DBHdata$Tree.growth > 10 | DBHdata$DBH.year.0 > 80, ]
DBHremove = DBHdata[DBHdata$Tree.growth < 10 & DBHdata$DBH.year.0 < 80, ] # remove 8 rows
# same formula as glm1.0
glm2.0 = glm(Tree.growth~DBH.year.0+Treatment+Large+DBH.year.0:Large+Treatment:Large, data = DBHremove)
summary(glm2.0)
tss = sum((DBHremove$Tree.growth-mean(DBHremove$Tree.growth))^2) #TSS
rss = sum((DBHremove$Tree.growth-fitted(glm2.0))^2) #RSS
(tss-rss)/tss #R^2
par(mfrow=c(2,2))
plot(glm2.0)
par(mfrow=c(1,2))
plot(DBHremove$Tree.growth, fitted(glm2.0), type = "p", col = DBHremove$Treatment, main = "Fitted vs Actual (color Treatment)")
legend("bottomright", legend = c("Control", "T1", "T2"), fill = c("black", "red", "green"))
abline(0, 1)
plot(DBHremove$Tree.growth, fitted(glm2.0), type = "p", col = DBHremove$Large, main = "Fitted vs Actual (color Large)")
legend("bottomright", legend = c("not-large", "large"), fill = c("black", "red"))
abline(0, 1)
DBHremove$Tree.growth.log = log(DBHremove$Tree.growth)
# same formula as glm1.0
glm2.1 = glm(Tree.growth.log~DBH.year.0+Treatment+Large+DBH.year.0:Large+Treatment:Large, data = DBHremove)
summary(glm2.1)
tss = sum((DBHremove$Tree.growth.log-mean(DBHremove$Tree.growth.log))^2) #TSS
rss = sum((DBHremove$Tree.growth.log-fitted(glm2.1))^2) #RSS
(tss-rss)/tss #R^2
par(mfrow=c(2,2))
plot(glm2.1)
par(mfrow=c(1,2))
plot(DBHremove$Tree.growth.log, fitted(glm2.1), type = "p", col = DBHremove$Treatment, main = "Fitted vs Actual (color Treatment)")
legend("topleft", legend = c("Control", "T1", "T2"), fill = c("black", "red", "green"))
abline(0, 1)
plot(DBHremove$Tree.growth.log, fitted(glm2.1), type = "p", col = DBHremove$Large, main = "Fitted vs Actual (color Large)")
legend("topleft", legend = c("not-large", "large"), fill = c("black", "red"))
abline(0, 1)
#library(MASS)
b = boxcox(DBHremove$Tree.growth~1, lambda = seq(0, 0.5, 0.05))
lambda = b$x[which.max(b$y)]
DBHremove$Tree.growth.boxcox = (DBHremove$Tree.growth^lambda-1)/lambda
glm2.2 = glm(Tree.growth.boxcox~DBH.year.0+Treatment+Large+DBH.year.0:Large+Treatment:Large, data = DBHremove)
summary(glm2.2)
tss = sum((DBHremove$Tree.growth.boxcox-mean(DBHremove$Tree.growth.boxcox))^2) #TSS
rss = sum((DBHremove$Tree.growth.boxcox-fitted(glm2.2))^2) #RSS
(tss-rss)/tss #R^2
par(mfrow=c(2,2))
plot(glm2.2)
par(mfrow=c(1,2))
plot(DBHremove$Tree.growth.boxcox, fitted(glm2.2), type = "p", col = DBHremove$Treatment, main = "Fitted vs Actual (color Treatment)")
legend("topleft", legend = c("Control", "T1", "T2"), fill = c("black", "red", "green"))
abline(0, 1)
plot(DBHremove$Tree.growth.boxcox, fitted(glm2.2), type = "p", col = DBHremove$Large, main = "Fitted vs Actual (color Large)")
legend("topleft", legend = c("not-large", "large"), fill = c("black", "red"))
abline(0, 1)
#library(lme4)
mixed2.0 = lmer(Tree.growth~DBH.year.0+Treatment+Large+DBH.year.0:Large+Treatment:Large+(-1+DBH.year.0+Treatment+Large+DBH.year.0:Large+Treatment:Large|Plot), data = DBHremove)
library(lme4)
mixed2.0 = lmer(Tree.growth~DBH.year.0+Treatment+Large+DBH.year.0:Large+Treatment:Large+(-1+DBH.year.0+Treatment+Large+DBH.year.0:Large+Treatment:Large|Plot), data = DBHremove)
summary(mixed2.0)
VarCorr(mixed2.0)
y.hat2.0 <- fitted(mixed2.0) # Fitted values
int.hat2.0 <- ranef(mixed2.0)[[1]][[1]] # Predicted intercepts
res.hat2.0 <- residuals(mixed2.0) # Estimated residuals
tss = sum((DBHremove$Tree.growth-mean(DBHremove$Tree.growth))^2) #TSS
rss = sum((DBHremove$Tree.growth-y.hat2.0)^2) #RSS
(tss-rss)/tss #R^2
par(mfrow=c(2,2))
#qqnorm(int.hat2.0, main="Random Intercepts"); qqline(int.hat2.0)
qqnorm(res.hat2.0, main="Residuals"); qqline(res.hat2.0)
plot(y.hat2.0, res.hat2.0, xlab="Fitted Values", ylab="Residuals")
abline(h=0, lty=2)
plot(DBHremove$Tree.growth, y.hat2.0, col = DBHremove$Treatment)
abline(0, 1)
plot(DBHremove$Tree.growth, y.hat2.0, col = DBHremove$Large)
abline(0, 1)
largerm = DBHremove[DBHremove$Large == "Yes", 1:11]
nlargerm = DBHremove[DBHremove$Large == "No", 1:11]
par(mfrow=c(1,2))
plot(largerm$Tree.growth~largerm$DBH.year.0, type = "p", col = largerm$Treatment)
plot(nlargerm$Tree.growth~nlargerm$DBH.year.0, type = "p", col = nlargerm$Treatment)
#library(lme4)
mixed4.0 = lmer(Tree.growth~DBH.year.0+Treatment+(DBH.year.0+Treatment|Plot), data = largerm)
summary(mixed4.0)
VarCorr(mixed4.0)
y.hat4.0 <- fitted(mixed4.0) # Fitted values
int.hat4.0 <- ranef(mixed4.0)[[1]][[1]] # Predicted intercepts
res.hat4.0 <- residuals(mixed4.0) # Estimated residuals
tss = sum((largerm$Tree.growth-mean(largerm$Tree.growth))^2) #TSS
rss = sum((largerm$Tree.growth-y.hat4.0)^2) #RSS
(tss-rss)/tss #R^2
par(mfrow=c(2,2))
qqnorm(int.hat4.0, main="Random Intercepts"); qqline(int.hat4.0)
qqnorm(res.hat4.0, main="Residuals"); qqline(res.hat4.0)
plot(y.hat4.0, res.hat4.0, xlab="Fitted Values", ylab="Residuals")
abline(h=0, lty=2)
plot(largerm$Tree.growth, y.hat4.0, col = largerm$Treatment)
abline(0, 1)
shapiro.test(DBHdata$Tree.growth) # not normal
library(car)
leveneTest(Tree.growth~Large, data = DBHdata) # variance are different between large and not-large groups
leveneTest(Tree.growth~Treatment, data = DBHdata) # variance are different across each Treatment group
shapiro.test(DBHremove$Tree.growth) # not normal
#library(car)
leveneTest(Tree.growth~Large, data = DBHremove) # variance are different between large and not-large groups
leveneTest(Tree.growth~Treatment, data = DBHremove) # variance are different across each Treatment group
View(mixed2.0)
setwd("C:/Users/YUHONG/Documents/R/DataScienceProject")
data = read.csv("./dataset/all_plots.csv", stringsAsFactors = FALSE)
summary(data)
sapply(data, typeof)
sapply(data[c(2,3,4,5,8,9,10,11,12,13,14,15)], unique)
DBHdata = data[1:9]
plot(DBHdata$DBH.year.0, DBHdata$DBH.year.6, type = "p") # 8 points outside main group
DBHrm = DBHdata[DBHdata$Tree.growth < 10 & DBHdata$DBH.year.0 < 80, ] # dataframe without the 8 rows
plot(DBHdata$DBH.year.0, DBHdata$DBH.year.6, type = "p", col = DBHdata$Treatment)
DBHdata = data[1:9]
data = read.csv("./dataset/all_plots.csv", stringsAsFactors = FALSE)
summary(data)
sapply(data, typeof)
sapply(data[c(2,3,4,5,8,9,10,11,12,13,14,15)], unique)
DBHdata = data[1:9]
# blank "Large", assume "No" where it's blank
DBHdata[DBHdata$Large == "", "Tree.Number"]
DBHdata[DBHdata$Large == "", "Large"] = "No"
# blank "Alive.at.year.6"
DBHdata[DBHdata$Alive.at.year.6 == "", 1:7]
# 20 rows with blank "Alive.at.year.6" have valid values for "DBH.year.6", assume they have "Yes" for "Alive.at.year.6"
DBHdata[DBHdata$Alive.at.year.6 == "" & !(is.na(DBHdata$DBH.year.6)), "Alive.at.year.6"] = "Yes"
# the rest 8 rows with blank "Alive.at.year.6" have NA for "DBH.year.6", not sure whether the trees are not alive, or just missing records in year6, so no modification.
# NA in "DBH.year.6", no modification
DBHdata[is.na(DBHdata$DBH.year.6), 1:7]
# 9 NAs for "DBH.year.6", 8 rows are the rows where "Alive.at.year.6" is blank, and one exception.
# NA in "DBH.year.0", no modification
DBHdata[is.na(DBHdata$DBH.year.0), 1:7] # 2 NAs for "DBH.year.0"
# NA in "Class.year.0" and NA in "Class.year.6", no modification
DBHdata[is.na(DBHdata$Class.year.0) | is.na(DBHdata$Class.year.6), ]
# All NA appears where there's NA for DBH (2 in year0, 9 in year6), but 2 exceptions where there's valid values for DBH:
# both in Plot5(T2: Radial), Tree.Number 148, 149, they have extremely large DBH.
DBHdata$Tree.growth = DBHdata$DBH.year.6 - DBHdata$DBH.year.0
DBHdata[is.na(DBHdata$Tree.growth) | DBHdata$Tree.growth <= 0, ] # rows to be removed
DBHdata = DBHdata[!(is.na(DBHdata$Tree.growth)) & DBHdata$Tree.growth > 0, ]
DBHdata$Treatment = factor(DBHdata$Treatment)
DBHdata$Large = factor(DBHdata$Large)
summary(DBHdata$Tree.growth)
var(DBHdata$Tree.growth) # quite large variance, variance = twice mean
hist(DBHdata$Tree.growth, breaks = 50)
# super rough comparison
set.seed(0)
hist(DBHdata$Tree.growth, breaks = 50)
hist(rnorm(400, 1.5), breaks = 20, add = TRUE, col = "light blue")
# very skewed and long heavy tail compared to normal distribution
hist(log(DBHdata$Tree.growth), breaks = 50)
hist(rnorm(400, 0.5), breaks = 40, add = TRUE, col = "light blue")
# taking log seems to make the shape closer to normal, but still different from normal
library(fitdistrplus)
descdist(DBHdata$Tree.growth) # closer to gamma distribution
descdist(log(DBHdata$Tree.growth))
fitdis1 = fitdist(DBHdata$Tree.growth, "norm")
fitdis2 = fitdist(DBHdata$Tree.growth, "gamma")
summary(fitdis1); summary(fitdis2)
par(mfrow = c(2, 2))
denscomp(list(fitdis1, fitdis2), legendtext = c("Normal","Gamma"))
qqcomp(list(fitdis1, fitdis2), legendtext = c("Normal","Gamma"))
cdfcomp(list(fitdis1, fitdis2), legendtext = c("Normal","Gamma"))
ppcomp(list(fitdis1, fitdis2), legendtext = c("Normal","Gamma"))
# Gamma better describes "Tree.growth" than normal, but the positive tail still doesn't fit
fitdis3 = fitdist(log(DBHdata$Tree.growth), "norm")
summary(fitdis3)
par(mfrow = c(2, 2))
denscomp(fitdis3, legendtext = "Normal")
qqcomp(fitdis3, legendtext = "Normal")
cdfcomp(fitdis3, legendtext = "Normal")
ppcomp(fitdis3, legendtext = "Normal")
# log(Tree.growth) can roughly be normal
summary(DBHdata$DBH.year.0)
var(DBHdata$DBH.year.0) # quite large variance, variance = twice mean
hist(DBHdata$DBH.year.0, breaks = 100)
# super rough comparison
set.seed(0)
hist(DBHdata$DBH.year.0, breaks = 100)
hist(rnorm(400, 35, 5), breaks = 40, add = TRUE, col = "light blue")
# DBH.year.0 has too many values within 20-30 to fit a normal shape
descdist(DBHdata$DBH.year.0)
fitdis4 = fitdist(DBHdata$DBH.year.0, "norm")
summary(fitdis4)
par(mfrow = c(2, 2))
denscomp(fitdis4, legendtext = "Normal")
qqcomp(fitdis4, legendtext = "Normal")
cdfcomp(fitdis4, legendtext = "Normal")
ppcomp(fitdis4, legendtext = "Normal")
# DBH.yea.0 is not quite like normal distribution, its distribution is also quite different from Tree.growth
# curve shape in the QQplot->maybe some transformation will make it closer to normal
plot(DBHdata$DBH.year.0, DBHdata$Tree.growth, type = "p", xlab = "DBH.year.0", ylab = "Tree.growth")
plot(DBHdata$DBH.year.0, DBHdata$Tree.growth, type = "p", col = DBHdata$Treatment, xlim = c(20, 70), ylim = c(0, 8), xlab = "DBH.year.0", ylab = "Tree.growth(zoom in)")
legend("topright", legend = c("Control", "T1: Gap", "T2: Radial"), fill = c(1, 2, 3))
plot(DBHdata$DBH.year.0, DBHdata$Tree.growth, type = "p", col = DBHdata$Large, xlim = c(20, 70),ylim = c(0, 8), xlab = "DBH.year.0", ylab = "Tree.growth(zoom in)")
legend("topright", legend = c("not large", "large"), fill = c(1, 2))
par(mfrow = c(3, 4))
for (i in seq(1:12))
plot(DBHdata[DBHdata$Plot == i, "DBH.year.0"], DBHdata[DBHdata$Plot == i, "Tree.growth"], type = "p", col = DBHdata[DBHdata$Plot == i, "Treatment"], xlim = c(20, 70), ylim = c(0, 8), xlab = "DBH.year.0", ylab = paste("Plot", i, "Tree.growth"))
par(mfrow = c(3, 4))
for (i in seq(1:12))
plot(DBHdata[DBHdata$Plot == i, "DBH.year.0"], log(DBHdata[DBHdata$Plot == i, "Tree.growth"]), type = "p", col = DBHdata[DBHdata$Plot == i, "Treatment"], xlim = c(20, 70), ylim = c(-3, 3), xlab = "DBH.year.0", ylab = paste("Plot", i, "log growth"))
par(mfrow = c(1, 3))
for (i in c("Control", "T1: Gap", "T2: Radial"))
plot(DBHdata[DBHdata$Treatment == i, "DBH.year.0"], DBHdata[DBHdata$Treatment == i, "Tree.growth"], type = "p", col = DBHdata$Large, xlim = c(20, 70), ylim = c(0, 8), xlab = "DBH.year.0", ylab = paste(i, "Tree.growth"))
par(mfrow = c(1, 3))
for (i in c("Control", "T1: Gap", "T2: Radial"))
plot(DBHdata[DBHdata$Treatment == i, "DBH.year.0"], log(DBHdata[DBHdata$Treatment == i, "Tree.growth"]), type = "p", col = DBHdata$Large, xlim = c(20, 70), ylim = c(-3, 3), xlab = "DBH.year.0", ylab = paste(i, "log growth"))
# best model derived from Tree.growth~DBH.year.0*Large*Treatment
glm1.0 = glm(Tree.growth~-1+DBH.year.0+Large+DBH.year.0:Large+Treatment:Large, data = DBHdata)
summary(glm1.0)
tss = sum((DBHdata$Tree.growth-mean(DBHdata$Tree.growth))^2) #TSS
rss = sum((DBHdata$Tree.growth-fitted(glm1.0))^2) #RSS
tss; rss
(tss-rss)/tss #R^2
plot(glm1.0)
plot(DBHdata$Tree.growth, fitted(glm1.0), type = "p", col = DBHdata$Treatment)
abline(0, 1)
# better than glm1.0, with increased Rsquare value and much smaller and "flat" residuals, but still not a good enough model for Tree.growth
glm2.0 = glm(Tree.growth~Treatment+Large+DBH.year.0+Treatment:DBH.year.0+Large:DBH.year.0, family = "Gamma", data = DBHdata)
summary(glm2.0)
tss = sum((DBHdata$Tree.growth-mean(DBHdata$Tree.growth))^2) #TSS
rss = sum((DBHdata$Tree.growth-fitted(glm2.0))^2) #RSS
tss; rss
(tss-rss)/tss #R^2
plot(glm2.0)
plot(DBHdata$Tree.growth, fitted(glm2.0), type = "p", col = DBHdata$Treatment)
abline(0, 1)
# view instances marked as outliers in the residual plots and Cook's distance plots in both glm1.0 and glm2.0
DBHdata[c("198","141","393","96","81","156"), ] # 4 outof 6 has large Tree.growth > 8
DBHdrop = subset(DBHdata, !(Tree.Number == 225 | Tree.Number == 478 | Tree.Number == 496 | Tree.Number == 71 | Tree.Number == 77 | Tree.Number == 184))
glm1.1 = glm(Tree.growth~-1+DBH.year.0+Large+Treatment+DBH.year.0:Large+Treatment:Large, data = DBHdrop)
summary(glm1.1)
tss = sum((DBHdrop$Tree.growth-mean(DBHdrop$Tree.growth))^2) #TSS
rss = sum((DBHdrop$Tree.growth-fitted(glm1.1))^2) #RSS
tss; rss
(tss-rss)/tss #R^2
plot(glm1.1)
plot(DBHdrop$Tree.growth, fitted(glm1.1), type = "p", col = DBHdrop$Treatment)
abline(0, 1)
glm2.1 = glm(Tree.growth~Treatment+Large+DBH.year.0+Treatment:DBH.year.0+Large:DBH.year.0, family = "Gamma", data = DBHdrop)
summary(glm2.1)
tss = sum((DBHdrop$Tree.growth-mean(DBHdrop$Tree.growth))^2) #TSS
rss = sum((DBHdrop$Tree.growth-fitted(glm2.1))^2) #RSS
tss; rss
(tss-rss)/tss #R^2
plot(glm2.1)
plot(DBHdrop$Tree.growth, fitted(glm2.1), type = "p", col = DBHdrop$Treatment)
abline(0, 1)
DBHdrop[DBHdrop$Tree.growth >= 8, ]
DBHremove = DBHdrop[DBHdrop$Tree.growth < 8, ]
glm1.2 = glm(Tree.growth~Treatment+Large+DBH.year.0+Large:DBH.year.0+Treatment:Large, data = DBHremove)
summary(glm1.2)
tss = sum((DBHremove$Tree.growth-mean(DBHremove$Tree.growth))^2) #TSS
rss = sum((DBHremove$Tree.growth-fitted(glm1.2))^2) #RSS
tss; rss
(tss-rss)/tss #R^2
plot(glm1.2)
plot(DBHremove$Tree.growth, fitted(glm1.2), type = "p", col = DBHremove$Treatment)
abline(0, 1)
glm2.2 = glm(Tree.growth~Treatment+Large+DBH.year.0+Treatment:DBH.year.0+Large:DBH.year.0, family = "Gamma", data = DBHremove)
summary(glm2.2)
tss = sum((DBHremove$Tree.growth-mean(DBHremove$Tree.growth))^2) #TSS
rss = sum((DBHremove$Tree.growth-fitted(glm2.2))^2) #RSS
tss; rss
(tss-rss)/tss #R^2
plot(glm2.2)
plot(DBHremove$Tree.growth, fitted(glm2.2), type = "p", col = DBHremove$Treatment)
abline(0, 1)
library(lme4)
mixed1.0 = lmer(Tree.growth~DBH.year.0+Large+Treatment+DBH.year.0:Large+Treatment:Large+(DBH.year.0+Large+Treatment+DBH.year.0:Large+Treatment:Large|Plot), data = DBHdata)
summary(mixed1.0)
VarCorr(mixed1.0)
y.hat1.0 <- fitted(mixed1.0) # Fitted values
int.hat1.0 <- ranef(mixed1.0)[[1]][[1]] # Predicted intercepts
res.hat1.0 <- residuals(mixed1.0) # Estimated residuals
tss = sum((DBHdata$Tree.growth-mean(DBHdata$Tree.growth))^2) #TSS
rss = sum((DBHdata$Tree.growth-y.hat1.0)^2) #RSS
tss; rss; (tss-rss)/tss #R^2
qqnorm(int.hat1.0, main="Random Intercepts"); qqline(int.hat1.0)
qqnorm(res.hat1.0, main="Residuals"); qqline(res.hat1.0)
plot(y.hat1.0, res.hat1.0, xlab="Fitted Values", ylab="Residuals")
abline(h=0, lty=2)
plot(DBHdata$Tree.growth, y.hat1.0, col = DBHdata$Treatment)
abline(0, 1)
plot(DBHdata$Tree.growth, y.hat1.0, col = DBHdata$Large)
abline(0, 1)
mixed1.1 = lmer(Tree.growth~DBH.year.0+Large+Treatment+DBH.year.0:Large+Treatment:Large+(DBH.year.0+Large+Treatment+DBH.year.0:Large+Treatment:Large|Plot), data = DBHremove)
summary(mixed1.1)
VarCorr(mixed1.1)
y.hat1.1 <- fitted(mixed1.1) # Fitted values
int.hat1.1 <- ranef(mixed1.1)[[1]][[1]] # Predicted intercepts
res.hat1.1 <- residuals(mixed1.1) # Estimated residuals
tss = sum((DBHremove$Tree.growth-mean(DBHremove$Tree.growth))^2) #TSS
rss = sum((DBHremove$Tree.growth-y.hat1.1)^2) #RSS
tss; rss; (tss-rss)/tss #R^2
qqnorm(int.hat1.1, main="Random Intercepts"); qqline(int.hat1.1)
qqnorm(res.hat1.1, main="Residuals"); qqline(res.hat1.1)
plot(y.hat1.1, res.hat1.1, xlab="Fitted Values", ylab="Residuals")
abline(h=0, lty=2)
plot(DBHremove$Tree.growth, y.hat1.1, col = DBHremove$Treatment)
abline(0, 1)
plot(DBHremove$Tree.growth, y.hat1.1, col = DBHremove$Large)
abline(0, 1)
plot(DBHdata$DBH.year.0, DBHdata$DBH.year.6, type = "p") # 8 points outside main group
DBHrm = DBHdata[DBHdata$Tree.growth < 10 & DBHdata$DBH.year.0 < 80, ] # dataframe without the 8 rows
plot(DBHdata$DBH.year.0, DBHdata$DBH.year.6, type = "p", col = DBHdata$Treatment)
legend("bottomright", legend = c("Control", "T1", "T2"), fill = c("black", "red", "green"))
plot(DBHdata$DBH.year.0, DBHdata$DBH.year.6, type = "p", col = DBHdata$Large)
legend("bottomright", legend = c("not-large", "large"), fill = c("black", "red"))
plot(DBHrm$DBH.year.0, DBHrm$DBH.year.6, type = "p", col = DBHrm$Treatment)
legend("bottomright", legend = c("Control", "T1", "T2"), fill = c("black", "red", "green"))
plot(DBHrm$DBH.year.0, DBHrm$DBH.year.6, type = "p", col = DBHrm$Large)
legend("bottomright", legend = c("not-large", "large"), fill = c("black", "red"))
cor(DBHdata$DBH.year.0, DBHdata$DBH.year.6) #0.9679595
# best model derived from DBH.year.6~DBH.year.0*Treatment*Large
glm3.0 = glm(DBH.year.6~DBH.year.0+Treatment+Large+DBH.year.0:Large+Treatment:Large, data = DBHdata)
summary(glm3.0)
tss = sum((DBHdata$DBH.year.6-mean(DBHdata$DBH.year.6))^2) #TSS
rss = sum((DBHdata$DBH.year.6-glm3.0$fitted.values)^2) #RSS
(tss-rss)/tss #R^2 = 0.9541006
par(mfrow=c(2,2))
plot(glm3.0)
par(mfrow=c(1,1))
plot(DBHdata$DBH.year.6, glm3.0$fitted.values, type = "p", col = DBHdata$Treatment)
legend("bottomright", legend = c("Control", "T1", "T2"), fill = c("black", "red", "green"))
abline(0,1)
plot(DBHdata$DBH.year.6, glm3.0$fitted.values, type = "p", col = DBHdata$Large)
legend("bottomright", legend = c("not-large", "large"), fill = c("black", "red"))
abline(0,1)
# same formula as glm3.0
glm4.0 = glm(DBH.year.6~DBH.year.0+Treatment+Large+DBH.year.0:Large+Treatment:Large, data = DBHrm)
summary(glm4.0)
tss = sum((DBHrm$DBH.year.6-mean(DBHrm$DBH.year.6))^2) #TSS
rss = sum((DBHrm$DBH.year.6-glm4.0$fitted.values)^2) #RSS
(tss-rss)/tss #R^2 = 0.9801139
par(mfrow=c(2,2))
plot(glm4.0)
par(mfrow=c(1,1))
plot(DBHrm$DBH.year.6, glm4.0$fitted.values, type = "p", col = DBHrm$Treatment)
legend("bottomright", legend = c("Control", "T1", "T2"), fill = c("black", "red", "green"))
abline(0,1)
plot(DBHrm$DBH.year.6, glm4.0$fitted.values, type = "p", col = DBHrm$Large)
legend("bottomright", legend = c("not-large", "large"), fill = c("black", "red"))
abline(0,1)
glm5.0 = glm(log(DBH.year.6)~log(DBH.year.0)+Treatment+Large+log(DBH.year.0):Large+Treatment:Large, data = DBHrm)
summary(glm5.0)
plot(glm5.0)
glm5.0 = glm(log(DBH.year.6)~(log(DBH.year.0)+Treatment+Large)^2, data = DBHrm)
summary(glm5.0)
plot(glm5.0)
step(glm5.0)
