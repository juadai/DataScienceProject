test_G <- test[,366]
qda_classifier <- qda(train_G~., data=train)
logistic_classifier <- glm(train_G ~ ., family='binomial', data=train)
summary(logistic_classifier)
X <- scale(train_X, scale=F)
pca <- prcomp(train_X)
Gamma <- pca$rotation
PComps <- t(t(Gamma)%*%t(X)) # Principal Components
pls_results <- plsr(train_G ~ ., data=data.frame(train_X))
library(pls)
pls_results <- plsr(train_G ~ ., data=data.frame(train_X))
Phi <- pls_results$projection
PLComps <- t(t(Phi)%*%t(X)) # Partial Least Squares Components
PLComps ==pls_results$projection
pls_results$projection
PLComps ==pls_results$scores
sum(PLComps!=pls_results$scores)
sum(PLComps!=pls_results$scores)
pls_results$projection
sum(PLComps!=pls_results$scores)
pls_results$scores
n <- length(train_G)
CV_PLS <- rep(0,50)
for (k in 1:50) {
PL <- data.frame(cbind(train_G, PLComps[,1:k]))
for (i in 1:n) {
q <- qda(train_G~., data=PL[-i,])
p <- predict(q, PL[i,])$class
if (p != PL[i,]$train_G) {
CV_PLS[k] <- CV_PLS[k] +1
}
}
}
library(pls)
G_train_path <- '/Users/nickjolly/Documents/2022:23/Unimelb/MV Stats (MAST90138)/04 Assignments/03/XGtrainRain.txt'
G_test_path <- '/Users/nickjolly/Documents/2022:23/Unimelb/MV Stats (MAST90138)/04 Assignments/03/XGtestRain.txt'
train <- read.table(G_train_path, sep=',', header=T)
test <- read.table(G_test_path, sep=',', header=T)
train_X <- train[,1:365]
train_G <- train[,366]
test_X <- test[,1:365]
test_G <- test[,366]
qda_classifier <- qda(train_G~., data=train)
X <- scale(train_X, scale=F)
pca <- prcomp(train_X)
Gamma <- pca$rotation
PComps <- t(t(Gamma)%*%t(X)) # Principal Components
pls_results <- plsr(train_G ~ ., data=data.frame(train_X))
Phi <- pls_results$projection
PLComps <- t(t(Phi)%*%t(X)) # Partial Least Squares Components
sum(PLComps!=pls_results$scores)
n <- length(train_G)
CV_PLS <- rep(0,50)
for (k in 1:50) {
PL <- data.frame(cbind(train_G, PLComps[,1:k]))
for (i in 1:n) {
q <- qda(train_G~., data=PL[-i,])
p <- predict(q, PL[i,])$class
if (p != PL[i,]$train_G) {
CV_PLS[k] <- CV_PLS[k] +1
}
}
}
library(MASS)
for (k in 1:50) {
PL <- data.frame(cbind(train_G, PLComps[,1:k]))
for (i in 1:n) {
q <- qda(train_G~., data=PL[-i,])
p <- predict(q, PL[i,])$class
if (p != PL[i,]$train_G) {
CV_PLS[k] <- CV_PLS[k] +1
}
}
}
CV_PLS <- CV_PLS/n
which.min(CV_PLS)
plot(CV_PLS, type='l')
PLComps_CV <- data.frame(PLComps[,1:which.min(CV_PLS)])
View(PLComps_CV)
PLComps_CV <- data.frame(PLComps[,1:which.min(CV_PLS)])
PLS_qda <- qda(train_G~., data=PLComps_CV)
G_train_path <- '/Users/nickjolly/Documents/2022:23/Unimelb/MV Stats (MAST90138)/04 Assignments/03/XGtrainRain.txt'
G_test_path <- '/Users/nickjolly/Documents/2022:23/Unimelb/MV Stats (MAST90138)/04 Assignments/03/XGtestRain.txt'
train <- read.table(G_train_path, sep=',', header=T)
test <- read.table(G_test_path, sep=',', header=T)
train_X <- train[,1:365]
train_G <- train[,366]
test_X <- test[,1:365]
test_G <- test[,366]
qda_classifier <- qda(train_G~., data=train)
logistic_classifier <- glm(train_G ~ ., family='binomial', data=train)
X <- scale(train_X, scale=F)
pca <- prcomp(train_X)
Gamma <- pca$rotation
PComps <- t(t(Gamma)%*%t(X)) # Principal Components
pls_results <- plsr(train_G ~ ., data=data.frame(train_X))
Phi <- pls_results$projection
PLComps <- t(t(Phi)%*%t(X)) # Partial Least Squares Components
sum(PLComps!=pls_results$scores)
n <- length(train_G)
CV_PLS <- rep(0,50)
for (k in 1:50) {
PL <- data.frame(cbind(train_G, PLComps[,1:k]))
for (i in 1:n) {
q <- qda(train_G~., data=PL[-i,])
p <- predict(q, PL[i,])$class
if (p != PL[i,]$train_G) {
CV_PLS[k] <- CV_PLS[k] +1
}
}
}
CV_PLS <- CV_PLS/n
CV_PLS
which.min(CV_PLS)
plot(CV_PLS, type='l')
PLComps_CV <- data.frame(PLComps[,1:which.min(CV_PLS)])
PLS_qda <- qda(train_G~., data=PLComps_CV)
summary(PLS_qda)
CV_PLS <- rep(0,50)
for (k in 1:50) {
PL <- data.frame(cbind(train_G, PLComps[,1:k]))
for (i in 1:n) {
q <- glm(train_G~., family='binomial', data=PL[-i,])
p <- round(predict(q, PL[i,], type='response'))
if (p != PL[i,]$train_G) {
CV_PLS[k] <- CV_PLS[k] +1
}
}
}
CV_PLS <- CV_PLS/n
which.min(CV_PLS)
plot(CV_PLS, type='l')
PLComps_CV <- data.frame(PLComps[,1:which.min(CV_PLS)])
PLS_logistic <- glm(train_G~., family='binomial', data=PLComps_CV)
summary(PLS_logistic)
PLS_logistic <- glm(factor(train_G)~., family='binomial', data=PLComps_CV)
PLS_logistic <- glm(train_G~., family='binomial', data=PLComps_CV)
summary(PLS_logistic)
View(PLComps_CV)
View(PLS_logistic)
?glm
glm.control(maxit=100)
PLS_logistic <- glm(train_G~., family='binomial', data=PLComps_CV)
glm.control()
glm.control <- glm.control(maxit=100)
glm.control()
glm.control$maxit <- 100
glm.control()
PLS_logistic <- glm(train_G~., family='binomial', data=PLComps_CV,
control=glm.control(maxit=100))
summary(PLS_logistic)
PLS_logistic <- glm(train_G~., family='binomial', data=PLComps_CV)
PLS_logistic <- glm(train_G~., family='binomial', data=PLComps_CV,
control=glm.control(maxit=100))
# Fitted values for Control
X <- data.frame('DBH.year.0'=1:45,
'InGap'=FALSE,
'Plot'=3,
'Treatment'='Control')
PI <- predictInterval(merMod = mixed2.0, newdata = X,
level = 0.95, n.sims = 1000,
stat = "median", type="linear.prediction",
include.resid.var = TRUE)
# Fitted values for Control
X <- data.frame('DBH.year.0'=1:60,
'InGap'=FALSE,
'Plot'=3,
'Treatment'='Control')
PI <- predictInterval(merMod = mixed2.0, newdata = X,
level = 0.95, n.sims = 1000,
stat = "median", type="linear.prediction",
include.resid.var = TRUE)
library(lme4)
library(merTools)
library(rstudioapi)
setwd(dirname(getActiveDocumentContext()$path))
data = read.csv("./dataset/all_plots.csv", stringsAsFactors = FALSE)
DBHdata = data[1:9]
DBHdata = DBHdata[!is.na(DBHdata$DBH.year.6), ]
DBHdata = DBHdata[!is.na(DBHdata$DBH.year.0), ]
DBHdata$Treatment = factor(DBHdata$Treatment)
DBHdata$Large = factor(DBHdata$Large)
DBHdatarm = DBHdata[DBHdata$DBH.year.6/DBHdata$DBH.year.0 < 1.25 & DBHdata$DBH.year.6/DBHdata$DBH.year.0 > 0.9 & DBHdata$DBH.year.0 < 80, ]
DBHdatarm$InGap = (DBHdatarm$Treatment == "T2: Radial" & DBHdatarm$Large == "Yes")
DBHdatarm$InGap = factor(DBHdatarm$InGap)
mixed2.0 = lmer(log(DBH.year.6)~log(DBH.year.0)+Treatment+InGap+log(DBH.year.0):InGap+(1|Plot), data = DBHdatarm)
# Fitted values for Control
X <- data.frame('DBH.year.0'=1:60,
'InGap'=FALSE,
'Plot'=3,
'Treatment'='Control')
PI <- predictInterval(merMod = mixed2.0, newdata = X,
level = 0.95, n.sims = 1000,
stat = "median", type="linear.prediction",
include.resid.var = TRUE)
# Plot Control vs. T1 (Not large trees)
X_T1 <- data.frame('DBH.year.0'=1:60,
'InGap'=FALSE,
'Plot'=3,
'Treatment'='T1: Gap')
PI_T1 <- predictInterval(merMod = mixed2.0, newdata = X_T1,
level = 0.95, n.sims = 1000,
stat = "median", type="linear.prediction",
include.resid.var = TRUE)
plot(0, xlim=c(30,50), ylim=c(30,80))
lines(1:60, exp(PI$fit), type='l')
lines(1:60, exp(PI$upr), type='l', col='grey')
lines(1:60, exp(PI$lwr), type='l', col='grey')
lines(1:60, exp(PI_2$fit), type='l', col='red', cex=4)
lines(1:60, exp(PI_T1$fit), type='l', col='red', cex=4)
lines(1:45, exp(PI_T1$upr), type='l', lty='dashed', col='red')
lines(1:45, exp(PI_T1$lwr), type='l', lty='dashed', col='red')
lines(1:60, exp(PI_T1$fit), type='l', col='red', cex=4)
lines(1:60, exp(PI_T1$upr), type='l', lty='dashed', col='red')
lines(1:60, exp(PI_T1$lwr), type='l', lty='dashed', col='red')
# Plot control vs T2 (Not large trees)
X_T2 <- data.frame('DBH.year.0'=1:45,
'InGap'=FALSE,
'Plot'=3,
'Treatment'='T2: Radial')
lines(1:60, exp(PI_2$fit), type='l', col='green', cex=4)
lines(1:60, exp(PI_2$upr), type='l', lty='dashed', col='green')
PI_T2 <- predictInterval(merMod = mixed2.0, newdata = X_T1,
level = 0.95, n.sims = 1000,
stat = "median", type="linear.prediction",
include.resid.var = TRUE)
lines(1:60, exp(PI_2$fit), type='l', col='green', cex=4)
lines(1:60, exp(PI_2$upr), type='l', lty='dashed', col='green')
lines(1:60, exp(PI_2$lwr), type='l', lty='dashed', col='green')
lines(1:60, exp(PI_T2$fit), type='l', col='green', cex=4)
lines(1:60, exp(PI_T2$upr), type='l', lty='dashed', col='green')
lines(1:60, exp(PI_T2$lwr), type='l', lty='dashed', col='green')
plot(0, xlim=c(30,50), ylim=c(30,60), main = 'Control vs T1, T2')
lines(1:60, exp(PI$fit), type='l')
lines(1:60, exp(PI$upr), type='l', col='grey')
lines(1:60, exp(PI$lwr), type='l', col='grey')
lines(1:60, exp(PI_T1$fit), type='l', col='red', cex=4)
lines(1:60, exp(PI_T1$upr), type='l', lty='dashed', col='red')
lines(1:60, exp(PI_T1$lwr), type='l', lty='dashed', col='red')
X_T2 <- data.frame('DBH.year.0'=1:60,
'InGap'=FALSE,
'Plot'=3,
'Treatment'='T2: Radial')
PI_T2 <- predictInterval(merMod = mixed2.0, newdata = X_T1,
level = 0.95, n.sims = 1000,
stat = "median", type="linear.prediction",
include.resid.var = TRUE)
lines(1:60, exp(PI_T2$fit), type='l', col='green', cex=4)
lines(1:60, exp(PI_T2$upr), type='l', lty='dashed', col='green')
lines(1:60, exp(PI_T2$lwr), type='l', lty='dashed', col='green')
X_ingap <- data.frame('DBH.year.0'=33:70,
'InGap'=TRUE,
'Plot'=3,
'Treatment'='T2: Radial')
PI_ingap<- predictInterval(merMod = mixed2.0, newdata = X_ingap,
level = 0.95, n.sims = 1000,
stat = "median", type="linear.prediction",
include.resid.var = TRUE)
plot(0, xlim=c(30,50), ylim=c(30,60), main = 'Control vs T1, T2'
xlab= 'DBH at Year 0', ylab='Fitted value for DBH at Year 6')
plot(0, xlim=c(30,50), ylim=c(30,60), main = 'Control vs T1, T2',
xlab= 'DBH at Year 0', ylab='Fitted value for DBH at Year 6')
lines(1:60, exp(PI$fit), type='l')
lines(1:60, exp(PI$upr), type='l', col='grey')
lines(1:60, exp(PI$lwr), type='l', col='grey')
lines(1:60, exp(PI_T1$fit), type='l', col='red', cex=4)
lines(1:60, exp(PI_T1$upr), type='l', lty='dashed', col='red')
lines(1:60, exp(PI_T1$lwr), type='l', lty='dashed', col='red')
X_T2 <- data.frame('DBH.year.0'=1:60,
'InGap'=FALSE,
'Plot'=3,
'Treatment'='T2: Radial')
PI_T2 <- predictInterval(merMod = mixed2.0, newdata = X_T1,
level = 0.95, n.sims = 1000,
stat = "median", type="linear.prediction",
include.resid.var = TRUE)
lines(1:60, exp(PI_T2$fit), type='l', col='green', cex=4)
lines(1:60, exp(PI_T2$upr), type='l', lty='dashed', col='green')
lines(1:60, exp(PI_T2$lwr), type='l', lty='dashed', col='green')
X_ingap <- data.frame('DBH.year.0'=33:70,
'InGap'=TRUE,
'Plot'=3,
'Treatment'='T2: Radial')
PI_ingap <- predictInterval(merMod = mixed2.0, newdata = X_ingap,
level = 0.95, n.sims = 1000,
stat = "median", type="linear.prediction",
include.resid.var = TRUE)
plot(0, xlim=c(30,50), ylim=c(30,60), main='Control vs In Gap')
lines(1:60, exp(PI_ingap$fit), type='l')
lines(1:60, exp(PI_ingap$upr), type='l', col='grey')
lines(1:60, exp(PI_ingap$lwr), type='l', col='grey')
plot(0, xlim=c(30,50), ylim=c(30,60), main='Control vs In Gap')
lines(1:60, exp(PI$fit), type='l')
lines(1:60, exp(PI$upr), type='l', col='grey')
lines(1:60, exp(PI$lwr), type='l', col='grey')
lines(33:70, exp(PI_2$fit), type='l', col='red', cex=4)
lines(33:70, exp(PI_2$upr), type='l', lty='dashed', col='red')
lines(33:70, exp(PI_
ingap$fit), type='l', col='red', cex=4)
lines(33:70, exp(PI_ingap$upr), type='l', lty='dashed', col='red')
lines(33:70, exp(PI_ingap$fit), type='l', col='red', cex=4)
lines(33:70, exp(PI_ingap$upr), type='l', lty='dashed', col='red')
lines(33:70, exp(PI_ingap$lwr), type='l', lty='dashed', col='red')
lines(33:70, exp(PI_ingap$fit), type='l', col='red', cex=4)
lines(33:70, exp(PI_ingap$upr), type='l', lty='dashed', col='red')
lines(33:70, exp(PI_ingap$lwr), type='l', lty='dashed', col='red')
abline(v=33, lty='dashed')
abline(v=45, lty='dashed')
lines(33:70, exp(PI_ingap$fit)
, type='l', col='red', cex=4)
lines(33:70, exp(PI_ingap$upr), type='l', lty='dashed', col='red')
plot(0, xlim=c(30,50), ylim=c(30,60), main='Control vs In Gap')
lines(1:60, exp(PI$fit), type='l')
lines(1:60, exp(PI$upr), type='l', col='grey')
lines(1:60, exp(PI$lwr), type='l', col='grey')
lines(33:70, exp(PI_ingap$fit)
, type='l', col='red', cex=4)
lines(33:70, exp(PI_ingap$upr), type='l', lty='dashed', col='red')
lines(33:70, exp(PI_ingap$lwr), type='l', lty='dashed', col='red')
abline(v=33, lty='dashed')
plot(0, xlim=c(30,50), ylim=c(30,60), main='Control vs In Gap',
xlab= 'DBH at Year 0', ylab='Fitted value for DBH at Year 6')
lines(1:60, exp(PI$fit), type='l')
lines(1:60, exp(PI$upr), type='l', col='grey')
lines(1:60, exp(PI$lwr), type='l', col='grey')
lines(33:70, exp(PI_ingap$fit)
, type='l', col='red', cex=4)
lines(33:70, exp(PI_ingap$upr), type='l', lty='dashed', col='red')
lines(33:70, exp(PI_ingap$lwr), type='l', lty='dashed', col='red')
abline(v=33, lty='dashed')
summary(DBHdatarm[DBHdatarm$Large=='Yes', 'DBH.year.6'])
library(lme4)
library(merTools)
library(rstudioapi)
setwd(dirname(getActiveDocumentContext()$path))
data = read.csv("./dataset/all_plots.csv", stringsAsFactors = FALSE)
DBHdata = data[1:9]
DBHdata = DBHdata[!is.na(DBHdata$DBH.year.6), ]
DBHdata = DBHdata[!is.na(DBHdata$DBH.year.0), ]
DBHdata$Treatment = factor(DBHdata$Treatment)
DBHdata$Large = factor(DBHdata$Large)
DBHdatarm = DBHdata[DBHdata$DBH.year.6/DBHdata$DBH.year.0 < 1.25 & DBHdata$DBH.year.6/DBHdata$DBH.year.0 > 0.9 & DBHdata$DBH.year.0 < 80, ]
DBHdatarm$InGap = (DBHdatarm$Treatment == "T2: Radial" & DBHdatarm$Large == "Yes")
DBHdatarm$InGap = factor(DBHdatarm$InGap)
mixed2.0 = lmer(log(DBH.year.6)~log(DBH.year.0)+Treatment+InGap+log(DBH.year.0):InGap+(1|Plot), data = DBHdatarm)
# Fitted values for Control
X <- data.frame('DBH.year.0'=1:60,
'InGap'=FALSE,
'Plot'=3,
'Treatment'='Control')
PI <- predictInterval(merMod = mixed2.0, newdata = X,
level = 0.95, n.sims = 1000,
stat = "median", type="linear.prediction",
include.resid.var = TRUE)
# Plot Control vs. T1 (Not large trees)
X_T1 <- data.frame('DBH.year.0'=1:60,
'InGap'=FALSE,
'Plot'=3,
'Treatment'='T1: Gap')
PI_T1 <- predictInterval(merMod = mixed2.0, newdata = X_T1,
level = 0.95, n.sims = 1000,
stat = "median", type="linear.prediction",
include.resid.var = TRUE)
plot(0, xlim=c(30,50), ylim=c(30,60), main = 'Control vs T1, T2',
xlab= 'DBH at Year 0', ylab='Fitted value for DBH at Year 6')
lines(1:60, exp(PI$fit), type='l')
lines(1:60, exp(PI$upr), type='l', col='grey')
lines(1:60, exp(PI$lwr), type='l', col='grey')
lines(1:60, exp(PI_T1$fit), type='l', col='red', cex=4)
lines(1:60, exp(PI_T1$upr), type='l', lty='dashed', col='red')
lines(1:60, exp(PI_T1$lwr), type='l', lty='dashed', col='red')
X_T2 <- data.frame('DBH.year.0'=1:60,
'InGap'=FALSE,
'Plot'=3,
'Treatment'='T2: Radial')
PI_T2 <- predictInterval(merMod = mixed2.0, newdata = X_T1,
level = 0.95, n.sims = 1000,
stat = "median", type="linear.prediction",
include.resid.var = TRUE)
lines(1:60, exp(PI_T2$fit), type='l', col='green', cex=4)
lines(1:60, exp(PI_T2$upr), type='l', lty='dashed', col='green')
lines(1:60, exp(PI_T2$lwr), type='l', lty='dashed', col='green')
X_ingap <- data.frame('DBH.year.0'=33:70,
'InGap'=TRUE,
'Plot'=3,
'Treatment'='T2: Radial')
PI_ingap <- predictInterval(merMod = mixed2.0, newdata = X_ingap,
level = 0.95, n.sims = 1000,
stat = "median", type="linear.prediction",
include.resid.var = TRUE)
plot(0, xlim=c(30,50), ylim=c(30,60), main='Control vs In Gap',
xlab= 'DBH at Year 0', ylab='Fitted value for DBH at Year 6')
lines(1:60, exp(PI$fit), type='l')
lines(1:60, exp(PI$upr), type='l', col='grey')
lines(1:60, exp(PI$lwr), type='l', col='grey')
lines(33:70, exp(PI_ingap$fit)
, type='l', col='red', cex=4)
lines(33:70, exp(PI_ingap$upr), type='l', lty='dashed', col='red')
lines(33:70, exp(PI_ingap$lwr), type='l', lty='dashed', col='red')
abline(v=33, lty='dashed')
summary(DBHdatarm[DBHdatarm$Large=='Yes', 'DBH.year.6'])
summary(DBHdatarm[DBHdatarm$Large=='No', 'DBH.year.6'])
alpha <- coef(mixed2.0)$Plot[,'(Intercept)']
summary(alpha)
exp(coef(mixed2.0)$Plot)
# data preparation
```{r}
setwd("C:/Users/YUHONG/Documents/R/DataScienceProject")
setwd("C:/Users/YUHONG/Documents/R/DataScienceProject")
# load data
data = read.csv("/Users/nickjolly/Desktop/tfn/DataScienceProject/Tree DBH/dataset/all_plots.csv", stringsAsFactors = FALSE)
DBHdata = data[1:9]
# blank "Large", assume "No" where it's blank
DBHdata[DBHdata$Large == "", "Tree.Number"]
DBHdata[DBHdata$Large == "", "Large"] = "No"
# remove rows with NA in "DBH.year.6"
DBHdata[is.na(DBHdata$DBH.year.6), 1:7] # 9 NAs for "DBH.year.6"
DBHdata = DBHdata[!is.na(DBHdata$DBH.year.6), ]
# remove rows with NA in "DBH.year.0"
DBHdata[is.na(DBHdata$DBH.year.0), 1:7] # 2 NAs for "DBH.year.0"
DBHdata = DBHdata[!is.na(DBHdata$DBH.year.0), ]
# NA in "Class.year.0" and NA in "Class.year.6", no modification
DBHdata[is.na(DBHdata$Class.year.0) | is.na(DBHdata$Class.year.6), ]
# both in Plot5(T2: Radial), Tree.Number 148, 149, they have extremely large DBH.
DBHdata$Treatment = factor(DBHdata$Treatment)
DBHdata$Large = factor(DBHdata$Large)
DBHdata[DBHdata$DBH.year.6 <= DBHdata$DBH.year.0, ]
# points outside the main group
par(mfrow=c(1,2))
plot(DBHdata$DBH.year.0, DBHdata$DBH.year.6, type = "p", col = factor(DBHdata$DBH.year.6/DBHdata$DBH.year.0 > 1.25 | DBHdata$DBH.year.6/DBHdata$DBH.year.0 < 0.9 | DBHdata$DBH.year.0 > 80))
plot(DBHdata$DBH.year.0, DBHdata$DBH.year.6/DBHdata$DBH.year.0, type = "p", col = factor(DBHdata$DBH.year.6/DBHdata$DBH.year.0 > 1.25 | DBHdata$DBH.year.6/DBHdata$DBH.year.0 < 0.9 | DBHdata$DBH.year.0 > 80), ylab = "gradient")
DBHdata[DBHdata$DBH.year.6/DBHdata$DBH.year.0 > 1.25 | DBHdata$DBH.year.6/DBHdata$DBH.year.0 < 0.9 | DBHdata$DBH.year.0 > 80, ]
# remove these outliers
DBHdatarm = DBHdata[DBHdata$DBH.year.6/DBHdata$DBH.year.0 < 1.25 & DBHdata$DBH.year.6/DBHdata$DBH.year.0 > 0.9 & DBHdata$DBH.year.0 < 80, ]
cor(DBHdata$DBH.year.0, DBHdata$DBH.year.6)
cor(log(DBHdata$DBH.year.0), log(DBHdata$DBH.year.6))
cor(DBHdatarm$DBH.year.0, DBHdatarm$DBH.year.6)
cor(log(DBHdatarm$DBH.year.0), log(DBHdatarm$DBH.year.6))
par(mfrow=c(3,4))
for (i in 1:12) {
plot(DBHdata[DBHdata$Plot == i, "DBH.year.0"], DBHdata[DBHdata$Plot == i, "DBH.year.6"], xlab = paste("Plot", i, "DBH.year.0"), ylab = paste("Plot", i, "DBH.year.6"), xlim = c(20,70), ylim = c(20,70), col = DBHdata[DBHdata$Plot == i, "Treatment"])
abline(0,1)
}
for (i in 1:12) {
plot(log(DBHdata[DBHdata$Plot == i, "DBH.year.0"]), log(DBHdata[DBHdata$Plot == i, "DBH.year.6"]), xlab = paste("Plot", i, "log(DBH.year.0)"), ylab = paste("Plot", i, "log(DBH.year.6)"), xlim = c(3.0,4.3), ylim = c(3.0, 4.3), col = DBHdata[DBHdata$Plot == i, "Treatment"])
abline(0,1)
}
DBHdatarm$InGap = (DBHdatarm$Treatment == "T2: Radial" & DBHdatarm$Large == "Yes")
DBHdatarm$InGap = factor(DBHdatarm$InGap)
library(lme4)
mixed2.0 = lmer(log(DBH.year.6)~log(DBH.year.0)+Treatment+InGap+log(DBH.year.0):InGap+(1|Plot), data = DBHdatarm)
summary(mixed2.0)
VarCorr(mixed2.0)
y.hat <- fitted(mixed2.0) # Fitted values
int.hat <- ranef(mixed2.0)[[1]][[1]] # Predicted intercepts
res.hat <- residuals(mixed2.0) # Estimated residuals
tss = sum((log(DBHdatarm$DBH.year.6)-mean(log(DBHdatarm$DBH.year.6)))^2) #TSS
rss = sum((log(DBHdatarm$DBH.year.6)-y.hat)^2) #RSS
(tss-rss)/tss #R^2 = 0.9801595
qqnorm(int.hat, main="Random Intercepts"); qqline(int.hat)
qqnorm(res.hat, main="Residuals"); qqline(res.hat)
plot(y.hat, res.hat, xlab="Fitted Values", ylab="Residuals")
abline(h=0, lty=2)
plot(log(DBHdatarm$DBH.year.6), y.hat, col = DBHdatarm$Treatment)
abline(0, 1)
plot(log(DBHdatarm$DBH.year.6), y.hat, col = DBHdatarm$Large)
abline(0, 1)
plot(log(DBHdatarm$DBH.year.6), y.hat, col = DBHdatarm$InGap)
abline(0, 1)
# add tree growth attribute
DBHdata$Tree.growth = DBHdata$DBH.year.6-DBHdata$DBH.year.0
plot(DBHdata$DBH.year.0, DBHdata$Tree.growth, col = DBHdata$Large, ylim = c(-10,20))
legend("topright", legend = c("large", "not large"), fill = c("red", "black"), cex = 0.8)
plot(DBHdata[DBHdata$Treatment == "Control", "DBH.year.0"], DBHdata[DBHdata$Treatment == "Control", "Tree.growth"], col = DBHdata[DBHdata$Treatment == "Control", "Large"], xlab = "Control DBH.year.0", ylab = "Control tree growth", ylim = c(-10,20))
legend("topright", legend = c("large", "not large"), fill = c("red", "black"), cex = 0.8)
plot(DBHdata[DBHdata$Treatment == "T1: Gap", "DBH.year.0"], DBHdata[DBHdata$Treatment == "T1: Gap", "Tree.growth"], col = DBHdata[DBHdata$Treatment == "T1: Gap", "Large"], xlab = "T1 DBH.year.0", ylab = "T1 tree growth", ylim = c(-10,20))
legend("topright", legend = c("large", "not large"), fill = c("red", "black"), cex = 0.8)
plot(DBHdata[DBHdata$Treatment == "T2: Radial", "DBH.year.0"], DBHdata[DBHdata$Treatment == "T2: Radial", "Tree.growth"], col = DBHdata[DBHdata$Treatment == "T2: Radial", "Large"], xlab = "T2 DBH.year.0", ylab = "T2 tree growth", ylim = c(-10,20))
legend("topright", legend = c("large", "not large"), fill = c("red", "black"), cex = 0.8)
# plot constrain according to mixed2.0
plot(DBHdatarm$DBH.year.0, DBHdatarm$DBH.year.6, col = DBHdatarm$InGap, xlim = c(20,80))
abline(v = 52.76, col = "blue") # constrain for T2InGap > T2 not InGap
abline(v = 57.87, col = "green") # constrain for T2InGap > T1
abline(v = 74.42, col = "orange") # constrain for T2InGap > Control
legend("topleft", c("InGap points", "not InGap points", "InGap>T2notInGap constrain", "InGap>T1 constrain", "InGap>Control constrain"), fill = c("black", "red", "blue", "green", "orange"), cex = 0.9)
plot(DBHdatarm[DBHdatarm$Treatment == "Control", "DBH.year.0"], DBHdatarm[DBHdatarm$Treatment == "Control", "DBH.year.6"], xlim = c(20,70), ylim = c(20,70), xlab = "DBHdatarm$DBH.year.0", ylab = "DBHdatarm$DBH.year.6")
points(DBHdatarm[DBHdatarm$InGap == TRUE, "DBH.year.0"], DBHdatarm[DBHdatarm$InGap == TRUE, "DBH.year.6"], col = "red")
legend("bottomright", legend = c("Control", "InGap"), fill = c("black", "red"))
plot(DBHdatarm[DBHdatarm$Treatment == "T1: Gap", "DBH.year.0"], DBHdatarm[DBHdatarm$Treatment == "T1: Gap", "DBH.year.6"], xlim = c(20,70), ylim = c(20,70), xlab = "DBHdatarm$DBH.year.0", ylab = "DBHdatarm$DBH.year.6")
points(DBHdatarm[DBHdatarm$InGap == TRUE, "DBH.year.0"], DBHdatarm[DBHdatarm$InGap == TRUE, "DBH.year.6"], col = "red")
legend("bottomright", legend = c("T1: Gap", "InGap"), fill = c("black", "red"))
plot(DBHdatarm[DBHdatarm$Treatment == "T2: Radial", "DBH.year.0"], DBHdatarm[DBHdatarm$Treatment == "T2: Radial", "DBH.year.6"], xlim = c(20,70), ylim = c(20,70), xlab = "DBHdatarm$DBH.year.0", ylab = "DBHdatarm$DBH.year.6")
points(DBHdatarm[DBHdatarm$InGap == TRUE, "DBH.year.0"], DBHdatarm[DBHdatarm$InGap == TRUE, "DBH.year.6"], col = "red")
legend("bottomright", legend = c("T2: Radial", "InGap"), fill = c("black", "red"))
plot(DBHdatarm[DBHdatarm$Treatment != "T2: Radial", "DBH.year.0"], DBHdatarm[DBHdatarm$Treatment != "T2: Radial", "DBH.year.6"], col = DBHdatarm[DBHdatarm$Treatment != "T2: Radial", "Treatment"])
plot(DBHdatarm[DBHdatarm$Treatment != "T1: Gap", "DBH.year.0"], DBHdatarm[DBHdatarm$Treatment != "T1: Gap", "DBH.year.6"], col = DBHdatarm[DBHdatarm$Treatment != "T1: Gap", "Treatment"])
#library(merTools)
X_ingap <- data.frame('DBH.year.0'=1:100, 'InGap'=TRUE, 'Plot'=6, 'Treatment'='T2: Radial')
PI_2 <- predictInterval(merMod = mixed2.0, newdata = X_ingap, level = 0.95, n.sims = 1000, stat = "median", type="linear.prediction", include.resid.var = TRUE)
library(merTools)
X_ingap <- data.frame('DBH.year.0'=1:100, 'InGap'=TRUE, 'Plot'=6, 'Treatment'='T2: Radial')
PI_2 <- predictInterval(merMod = mixed2.0, newdata = X_ingap, level = 0.95, n.sims = 1000, stat = "median", type="linear.prediction", include.resid.var = TRUE)
for (t in c("Control", "T1: Gap", "T2: Radial")) {
X <- data.frame('DBH.year.0'=1:100, 'InGap'=FALSE, 'Plot'=6, 'Treatment'=t)
PI <- predictInterval(merMod = mixed2.0, newdata = X, level = 0.95, n.sims = 1000, stat = "median", type="linear.prediction", include.resid.var = TRUE)
plot(1:100, exp(PI$fit), type='n', xlim=c(20,60), ylim = c(10,80), xlab = "DBH.year.0", ylab = "predicted DBH.year.6")
polygon(c(1:100, 100:1), c(exp(PI$upr), rev(exp(PI$lwr))), col = "light grey", border = "light grey")
lines(1:100, exp(PI$fit), type = "l")
polygon(c(1:100, 100:1), c(exp(PI_2$upr), rev(exp(PI_2$lwr))), col = rgb(255,0,0, 50, maxColorValue = 255), border = rgb(255,0,0, 50, maxColorValue = 255))
lines(1:100, exp(PI_2$fit), type = "l", col = "red")
legend("topleft", legend = c("InGap", t), fill = c("red", "black"))
}
