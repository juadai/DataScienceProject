polygon(c(1:100, 100:1), c(exp(PI$upr), rev(exp(PI$lwr))), col = shades[i], border = shades[i])
lines(1:100, exp(PI$fit), type = "l", col = colours[i])
}
legend("topleft", legend = treatments,
lty=c('black','red','green'NA),
legend("topleft", legend = treatments,
lty=c('black','red','green'),
,fill = c(NA,NA,NA,'lightgrey'), bty='n')
legend("topleft", legend = treatments,
lty=c('black','red','green', 'NA'),
,fill = c(NA,NA,NA,'lightgrey'), bty='n')
legend("topleft", legend = treatments,
lty=c('black','red','green',NA),
,fill = c(NA,NA,NA,'lightgrey'), bty='n')
,fill = c('black',red','green','lightgrey'), bty='n')
legend("topleft", legend = treatments,
lty=c(1,1,1,NA),
,fill = c('black','red','green','lightgrey'), bty='n')
legend("topleft", legend = treatments,
lty=c(1,1,1,NA),
density=c(NA,NA,NA,100),
fill = c('black','red','green','lightgrey'), bty='n')
legend("topleft", legend = treatments,
lty=c(1,1,1,NA),
density=c(NA,NA,NA,100),
col= c('black','red','green','lightgrey'), bty='n')
legend("topleft", legend = treatments,
lty=c(1,1,1,NA),
density=c(0,0,0,100),
col= c('black','red','green','lightgrey'), bty='n')
par(bg="#fffdf3")
treatments = c("Control", "T1: Gap", "T2: Radial")
shades = c("light grey", rgb(255,0,0, 50, maxColorValue = 255), rgb(0,255,0, 50, maxColorValue = 255))
colours = c("black", "red", "green")
plot(1:100, exp(PI$fit), type='n', xlim=c(20,60), ylim = c(15,60), xlab = "DBH: Year 0", ylab = "Estimated DBH: Year 6",
main='Treatments vs Control')
for (i in 1:3) {
X <- data.frame('DBH.year.0'=1:100, 'InGap'=FALSE, 'Plot'=6, 'Treatment'=treatments[i])
PI <- predictInterval(merMod = mixed2.0, newdata = X, level = 0.95, n.sims = 1000, stat = "median", type="linear.prediction", include.resid.var = TRUE)
polygon(c(1:100, 100:1), c(exp(PI$upr), rev(exp(PI$lwr))), col = shades[i], border = shades[i])
lines(1:100, exp(PI$fit), type = "l", col = colours[i])
}
legend("topleft", legend = treatments,
lty=c(1,1,1,NA),
density=c(0,0,0,100),
col= c('black','red','green','lightgrey'), bty='n')
par(bg="#fffdf3")
treatments = c("Control", "T1: Gap", "T2: Radial")
shades = c("light grey", rgb(255,0,0, 50, maxColorValue = 255), rgb(0,255,0, 50, maxColorValue = 255))
colours = c("black", "red", "green")
plot(1:100, exp(PI$fit), type='n', xlim=c(20,60), ylim = c(15,60), xlab = "DBH: Year 0", ylab = "Estimated DBH: Year 6",
main='Treatments vs Control')
for (i in 1:3) {
X <- data.frame('DBH.year.0'=1:100, 'InGap'=FALSE, 'Plot'=6, 'Treatment'=treatments[i])
PI <- predictInterval(merMod = mixed2.0, newdata = X, level = 0.95, n.sims = 1000, stat = "median", type="linear.prediction", include.resid.var = TRUE)
polygon(c(1:100, 100:1), c(exp(PI$upr), rev(exp(PI$lwr))), col = shades[i], border = shades[i])
lines(1:100, exp(PI$fit), type = "l", col = colours[i])
}
legend("topleft", legend = treatments,
lty=c(1,1,1,NA),
col= c('black','red','green','lightgrey'), bty='n')
legend("topleft", legend = treatments,
lty=c(1,1,1,NA),
density=c(0,0,0,10),
border=c(NA,NA,NA,'lightgrey'),
col= c('black','red','green',NA), bty='n')
for (i in 1:3) {
X <- data.frame('DBH.year.0'=1:100, 'InGap'=FALSE, 'Plot'=6, 'Treatment'=treatments[i])
PI <- predictInterval(merMod = mixed2.0, newdata = X, level = 0.95, n.sims = 1000, stat = "median", type="linear.prediction", include.resid.var = TRUE)
polygon(c(1:100, 100:1), c(exp(PI$upr), rev(exp(PI$lwr))), col = shades[i], border = shades[i])
lines(1:100, exp(PI$fit), type = "l", col = colours[i])
}
par(bg="#fffdf3")
treatments = c("Control", "T1: Gap", "T2: Radial")
shades = c("light grey", rgb(255,0,0, 50, maxColorValue = 255), rgb(0,255,0, 50, maxColorValue = 255))
colours = c("black", "red", "green")
plot(1:100, exp(PI$fit), type='n', xlim=c(20,60), ylim = c(15,60), xlab = "DBH: Year 0", ylab = "Estimated DBH: Year 6",
main='Treatments vs Control')
for (i in 1:3) {
X <- data.frame('DBH.year.0'=1:100, 'InGap'=FALSE, 'Plot'=6, 'Treatment'=treatments[i])
PI <- predictInterval(merMod = mixed2.0, newdata = X, level = 0.95, n.sims = 1000, stat = "median", type="linear.prediction", include.resid.var = TRUE)
polygon(c(1:100, 100:1), c(exp(PI$upr), rev(exp(PI$lwr))), col = shades[i], border = shades[i])
lines(1:100, exp(PI$fit), type = "l", col = colours[i])
}
legend("topleft", legend = treatments,
lty=c(1,1,1,NA),
density=c(0,0,0,10),
border=c(NA,NA,NA,'lightgrey'),
col= c('black','red','green',NA), bty='n')
treatments = c("Control", "T1: Gap", "T2: Radial", '95% CI')
shades = c("light grey", rgb(255,0,0, 50, maxColorValue = 255), rgb(0,255,0, 50, maxColorValue = 255))
colours = c("black", "red", "green")
plot(1:100, exp(PI$fit), type='n', xlim=c(20,60), ylim = c(15,60), xlab = "DBH: Year 0", ylab = "Estimated DBH: Year 6",
main='Treatments vs Control')
for (i in 1:3) {
X <- data.frame('DBH.year.0'=1:100, 'InGap'=FALSE, 'Plot'=6, 'Treatment'=treatments[i])
PI <- predictInterval(merMod = mixed2.0, newdata = X, level = 0.95, n.sims = 1000, stat = "median", type="linear.prediction", include.resid.var = TRUE)
polygon(c(1:100, 100:1), c(exp(PI$upr), rev(exp(PI$lwr))), col = shades[i], border = shades[i])
lines(1:100, exp(PI$fit), type = "l", col = colours[i])
}
legend("topleft", legend = treatments,
lty=c(1,1,1,NA),
density=c(0,0,0,10),
border=c(NA,NA,NA,'lightgrey'),
col= c('black','red','green',NA), bty='n')
legend("topleft", legend = treatments,
lty=c(1,1,1,NA),
density=c(0,0,0,10),
border=c(NA,NA,NA,'lightgrey'),
x.intersp=c(2,2,2,0.5),
col= c('black','red','green',NA), bty='n')
plot(1:100, exp(PI$fit), type='n', xlim=c(20,60), ylim = c(15,60), xlab = "DBH: Year 0", ylab = "Estimated DBH: Year 6",
main='Treatments vs Control')
for (i in 1:3) {
X <- data.frame('DBH.year.0'=1:100, 'InGap'=FALSE, 'Plot'=6, 'Treatment'=treatments[i])
PI <- predictInterval(merMod = mixed2.0, newdata = X, level = 0.95, n.sims = 1000, stat = "median", type="linear.prediction", include.resid.var = TRUE)
polygon(c(1:100, 100:1), c(exp(PI$upr), rev(exp(PI$lwr))), col = shades[i], border = shades[i])
lines(1:100, exp(PI$fit), type = "l", col = colours[i])
}
legend("topleft", legend = treatments,
lty=c(1,1,1,NA),
density=c(0,0,0,10),
border=c(NA,NA,NA,'lightgrey'),
x.intersp=c(2,2,2,0.5),
col= c('black','red','green',NA), bty='n')
legend("topleft", legend = treatments,
lty=c(1,1,1,NA),
density=c(0,0,0,10),
border=c(NA,NA,NA,'lightgrey'),
x.intersp=c(2,2,2,1),
col= c('black','red','green',NA), bty='n')
legend("topleft", legend = treatments,
lty=c(1,1,1,NA),
density=c(0,0,0,10),
border=c(NA,NA,NA,'lightgrey'),
x.intersp=c(1,1,1,-0.5),
col= c('black','red','green',NA), bty='n')
legend("topleft", legend = treatments,
lty=c(1,1,1,NA),
density=c(0,0,0,10),
border=c(NA,NA,NA,'lightgrey'),
x.intersp=c(1,1,1,-0.5),
col= c('black','red','green',NA), bty='n')
plot(1:100, exp(PI$fit), type='n', xlim=c(20,60), ylim = c(15,60), xlab = "DBH: Year 0", ylab = "Estimated DBH: Year 6",
main='Treatments vs Control')
for (i in 1:3) {
X <- data.frame('DBH.year.0'=1:100, 'InGap'=FALSE, 'Plot'=6, 'Treatment'=treatments[i])
PI <- predictInterval(merMod = mixed2.0, newdata = X, level = 0.95, n.sims = 1000, stat = "median", type="linear.prediction", include.resid.var = TRUE)
polygon(c(1:100, 100:1), c(exp(PI$upr), rev(exp(PI$lwr))), col = shades[i], border = shades[i])
lines(1:100, exp(PI$fit), type = "l", col = colours[i])
}
legend("topleft", legend = treatments,
lty=c(1,1,1,NA),
density=c(0,0,0,10),
border=c(NA,NA,NA,'lightgrey'),
x.intersp=c(1,1,1,-0.5),
col= c('black','red','green',NA), bty='n')
legend("topleft", legend = treatments,
lty=c(1,1,1,NA),
density=c(0,0,0,10),
border=c(NA,NA,NA,'lightgrey'),
fill=c(NA,NA,NA,'lightgrey'),
x.intersp=c(1,1,1,-0.5),
col= c('black','red','green',NA), bty='n')
legend("topleft", legend = treatments,
lty=c(1,1,1,NA),
border=c(NA,NA,NA,'lightgrey'),
fill=c(NA,NA,NA,'lightgrey'),
x.intersp=c(1,1,1,-0.5),
col= c('black','red','green',NA), bty='n')
plot(1:100, exp(PI$fit), type='n', xlim=c(20,60), ylim = c(15,60), xlab = "DBH: Year 0", ylab = "Estimated DBH: Year 6",
main='Treatments vs Control')
for (i in 1:3) {
X <- data.frame('DBH.year.0'=1:100, 'InGap'=FALSE, 'Plot'=6, 'Treatment'=treatments[i])
PI <- predictInterval(merMod = mixed2.0, newdata = X, level = 0.95, n.sims = 1000, stat = "median", type="linear.prediction", include.resid.var = TRUE)
polygon(c(1:100, 100:1), c(exp(PI$upr), rev(exp(PI$lwr))), col = shades[i], border = shades[i])
lines(1:100, exp(PI$fit), type = "l", col = colours[i])
}
legend("topleft", legend = treatments,
lty=c(1,1,1,NA),
border=c(NA,NA,NA,'lightgrey'),
fill=c(NA,NA,NA,'lightgrey'),
col= c('black','red','green',NA), bty='n')
legend("topleft", legend = treatments,
lty=c(1,1,1,NA),
border=c(NA,NA,NA,'lightgrey'),
fill=c(NA,NA,NA,'lightgrey'),
x.intersp=c(0,0,0,0),
col= c('black','red','green',NA), bty='n')
?x.intersp
plot(1:100, exp(PI$fit), type='n', xlim=c(20,60), ylim = c(15,60), xlab = "DBH: Year 0", ylab = "Estimated DBH: Year 6",
main='Treatments vs Control')
for (i in 1:3) {
X <- data.frame('DBH.year.0'=1:100, 'InGap'=FALSE, 'Plot'=6, 'Treatment'=treatments[i])
PI <- predictInterval(merMod = mixed2.0, newdata = X, level = 0.95, n.sims = 1000, stat = "median", type="linear.prediction", include.resid.var = TRUE)
polygon(c(1:100, 100:1), c(exp(PI$upr), rev(exp(PI$lwr))), col = shades[i], border = shades[i])
lines(1:100, exp(PI$fit), type = "l", col = colours[i])
}
legend("topleft", legend = treatments,
lty=c(1,1,1,NA),
border=c(NA,NA,NA,'lightgrey'),
fill=c(NA,NA,NA,'lightgrey'),
x.intersp=c(0,0,0,0),
col= c('black','red','green',NA), bty='n')
legend("topleft", legend = treatments,
lty=c(1,1,1,NA),
border=c(NA,NA,NA,'lightgrey'),
fill=c(NA,NA,NA,'lightgrey'),
x.intersp=c(1,1,1,0),
col= c('black','red','green',NA), bty='n')
par(bg="#fffdf3")
treatments = c("Control", "T1: Gap", "T2: Radial", '95% CI')
shades = c("light grey", rgb(255,0,0, 50, maxColorValue = 255), rgb(0,255,0, 50, maxColorValue = 255))
colours = c("black", "red", "green")
plot(1:100, exp(PI$fit), type='n', xlim=c(20,60), ylim = c(15,60), xlab = "DBH: Year 0", ylab = "Estimated DBH: Year 6",
main='Treatments vs Control')
for (i in 1:3) {
X <- data.frame('DBH.year.0'=1:100, 'InGap'=FALSE, 'Plot'=6, 'Treatment'=treatments[i])
PI <- predictInterval(merMod = mixed2.0, newdata = X, level = 0.95, n.sims = 1000, stat = "median", type="linear.prediction", include.resid.var = TRUE)
polygon(c(1:100, 100:1), c(exp(PI$upr), rev(exp(PI$lwr))), col = shades[i], border = shades[i])
lines(1:100, exp(PI$fit), type = "l", col = colours[i])
}
legend("topleft", legend = treatments,
lty=c(1,1,1,NA),
border=c(NA,NA,NA,'lightgrey'),
fill=c(NA,NA,NA,'lightgrey'),
x.intersp=c(1,1,1,0),
col= c('black','red','green',NA), bty='n')
legend("topleft", legend = treatments,
lty=c(1,1,1,NA),
border=c(NA,NA,NA,'lightgrey'),
fill=c(NA,NA,NA,'lightgrey'),
x.intersp=c(1,1,1,0),
adj=c(0,0,0,5),
col= c('black','red','green',NA), bty='n')
legend("topleft", legend = treatments,
lty=c(1,1,1,NA),
x.intersp=c(1,1,1,0),
adj=c(0,0,0,5),
col= c('black','red','green',NA), bty='n')
legend("topleft", legend = treatments,
lty=c(1,1,1,NA),
col= c('black','red','green',NA), bty='n')
par(bg="#fffdf3")
treatments = c("Control", "T1: Gap", "T2: Radial", '95% CI')
shades = c("light grey", rgb(255,0,0, 50, maxColorValue = 255), rgb(0,255,0, 50, maxColorValue = 255))
colours = c("black", "red", "green")
plot(1:100, exp(PI$fit), type='n', xlim=c(20,60), ylim = c(15,60), xlab = "DBH: Year 0", ylab = "Estimated DBH: Year 6",
main='Treatments vs Control')
for (i in 1:3) {
X <- data.frame('DBH.year.0'=1:100, 'InGap'=FALSE, 'Plot'=6, 'Treatment'=treatments[i])
PI <- predictInterval(merMod = mixed2.0, newdata = X, level = 0.95, n.sims = 1000, stat = "median", type="linear.prediction", include.resid.var = TRUE)
polygon(c(1:100, 100:1), c(exp(PI$upr), rev(exp(PI$lwr))), col = shades[i], border = shades[i])
lines(1:100, exp(PI$fit), type = "l", col = colours[i])
}
legend("topleft", legend = treatments,
lty=c(1,1,1,NA),
col= c('black','red','green',NA), bty='n')
plot(1:100, exp(PI$fit), type='n', xlim=c(20,60), ylim = c(15,60), xlab = "DBH: Year 0", ylab = "Estimated DBH: Year 6",
main='Tree Size Model: \nTreatments vs Control')
for (i in 1:3) {
X <- data.frame('DBH.year.0'=1:100, 'InGap'=FALSE, 'Plot'=6, 'Treatment'=treatments[i])
PI <- predictInterval(merMod = mixed2.0, newdata = X, level = 0.95, n.sims = 1000, stat = "median", type="linear.prediction", include.resid.var = TRUE)
polygon(c(1:100, 100:1), c(exp(PI$upr), rev(exp(PI$lwr))), col = shades[i], border = shades[i])
lines(1:100, exp(PI$fit), type = "l", col = colours[i])
}
legend("topleft", legend = treatments,
lty=c(1,1,1,NA),
col= c('black','red','green',NA), bty='n')
X_ingap <- data.frame('DBH.year.0'=1:100, 'InGap'=TRUE, 'Plot'=6, 'Treatment'='T2: Radial')
PI_2 <- predictInterval(merMod = mixed2.0, newdata = X_ingap, level = 0.95, n.sims = 1000, stat = "median", type="linear.prediction", include.resid.var = TRUE)
for (t in c("Control", "T1: Gap", "T2: Radial")) {
X <- data.frame('DBH.year.0'=1:100, 'InGap'=FALSE, 'Plot'=6, 'Treatment'=t)
PI <- predictInterval(merMod = mixed2.0, newdata = X, level = 0.95, n.sims = 1000, stat = "median", type="linear.prediction", include.resid.var = TRUE)
plot(1:100, exp(PI$fit), type='n', xlim=c(20,60), ylim = c(10,80), xlab = "DBH.year.0", ylab = "predicted DBH.year.6")
polygon(c(1:100, 100:1), c(exp(PI$upr), rev(exp(PI$lwr))), col = "light grey", border = "light grey")
lines(1:100, exp(PI$fit), type = "l")
polygon(c(1:100, 100:1), c(exp(PI_2$upr), rev(exp(PI_2$lwr))), col = rgb(255,0,0, 50, maxColorValue = 255), border = rgb(255,0,0, 50, maxColorValue = 255))
lines(1:100, exp(PI_2$fit), type = "l", col = "red")
legend("topleft", legend = c("In Gap", t), fill = c("red", "black"))
}
plot(1:100, exp(PI$fit), type='n', xlim=c(20,60), ylim = c(15,60), xlab = "DBH: Year 0", ylab = "Estimated DBH: Year 6",
main='Tree Size Model: \nTreatments vs Control')
plot(1:100, exp(PI$fit), type='n', xlim=c(20,60), ylim = c(10,80), xlab = "DBH.year.0", ylab = "predicted DBH.year.6")
plot(1:100, exp(PI$fit), type='n', xlim=c(20,60), ylim = c(15,60), xlab = "DBH: Year 0", ylab = "Estimated DBH: Year 6",
main='Tree Size Model: \nTreatments vs Control')
plot(1:100, exp(PI$fit), type='n', xlim=c(20,60), ylim = c(15,60), xlab = "DBH: Year 0", ylab = "Estimated DBH: Year 6",
main="Tree Size Model: \n'In Gap' vs Control")
polygon(c(1:100, 100:1), c(exp(PI$upr), rev(exp(PI$lwr))), col = "light grey", border = "light grey")
lines(1:100, exp(PI$fit), type = "l")
polygon(c(30:100, 100:30), c(exp(PI_2$upr), rev(exp(PI_2$lwr))), col = rgb(255,0,0, 50, maxColorValue = 255), border = rgb(255,0,0, 50, maxColorValue = 255))
PI_2 <- predictInterval(merMod = mixed2.0, newdata = X_ingap, level = 0.95, n.sims = 1000, stat = "median", type="linear.prediction", include.resid.var = TRUE)
polygon(c(30:100, 100:30), c(exp(PI_2$upr), rev(exp(PI_2$lwr))), col = rgb(255,0,0, 50, maxColorValue = 255), border = rgb(255,0,0, 50, maxColorValue = 255))
polygon(c(30:100, 100:30), c(exp(PI_2$upr), rev(exp(PI_2$lwr))), col = rgb(255,0,0, 50, maxColorValue = 255), border = rgb(255,0,0, 50, maxColorValue = 255))
polygon(c(1:100, 100:1), c(exp(PI$upr), rev(exp(PI$lwr))), col = "light grey", border = "light grey")
lines(1:100, exp(PI$fit), type = "l")
polygon(c(30:100, 100:30), c(exp(PI_2$upr), rev(exp(PI_2$lwr))), col = rgb(255,0,0, 50, maxColorValue = 255), border = rgb(255,0,0, 50, maxColorValue = 255))
PI_2 <- predictInterval(merMod = mixed2.0, newdata = X_ingap, level = 0.95, n.sims = 1000, stat = "median", type="linear.prediction", include.resid.var = TRUE)
polygon(c(30:100, 100:30), c(exp(PI_2$upr), rev(exp(PI_2$lwr))), col = rgb(255,0,0, 50, maxColorValue = 255), border = rgb(255,0,0, 50, maxColorValue = 255))
polygon(c(1:100, 100:1), c(exp(PI_2$upr), rev(exp(PI_2$lwr))), col = rgb(255,0,0, 50, maxColorValue = 255), border = rgb(255,0,0, 50, maxColorValue = 255))
X_ingap <- data.frame('DBH.year.0'=30:100, 'InGap'=TRUE, 'Plot'=6, 'Treatment'='T2: Radial')
PI_2 <- predictInterval(merMod = mixed2.0, newdata = X_ingap, level = 0.95, n.sims = 1000, stat = "median", type="linear.prediction", include.resid.var = TRUE)
X <- data.frame('DBH.year.0'=1:100, 'InGap'=FALSE, 'Plot'=6, 'Treatment'='Control')
PI <- predictInterval(merMod = mixed2.0, newdata = X, level = 0.95, n.sims = 1000, stat = "median", type="linear.prediction", include.resid.var = TRUE)
plot(1:100, exp(PI$fit), type='n', xlim=c(20,60), ylim = c(15,60), xlab = "DBH: Year 0", ylab = "Estimated DBH: Year 6",
main="Tree Size Model: \n'In Gap' vs Control")
polygon(c(1:100, 100:1), c(exp(PI$upr), rev(exp(PI$lwr))), col = "light grey", border = "light grey")
lines(1:100, exp(PI$fit), type = "l")
polygon(c(1:100, 100:1), c(exp(PI_2$upr), rev(exp(PI_2$lwr))), col = rgb(255,0,0, 50, maxColorValue = 255), border = rgb(255,0,0, 50, maxColorValue = 255))
polygon(c(30:100, 100:30), c(exp(PI_2$upr), rev(exp(PI_2$lwr))), col = rgb(255,0,0, 50, maxColorValue = 255), border = rgb(255,0,0, 50, maxColorValue = 255))
lines(1:100, exp(PI_2$fit), type = "l", col = "red")
lines(30:100, exp(PI_2$fit), type = "l", col = "red")
legend("topleft", legend = c("In Gap", 'Control'),
lty=c(1,1),
col= c('black','red'), bty='n')
legend("topleft", legend = c("In Gap", 'Control', '95% CI'),
lty=c(1,1,NA),
col= c('black','red','green',NA), bty='n')
plot(1:100, exp(PI$fit), type='n', xlim=c(20,60), ylim = c(15,60), xlab = "DBH: Year 0", ylab = "Estimated DBH: Year 6",
main="Tree Size Model: \n'In Gap' vs Control")
polygon(c(1:100, 100:1), c(exp(PI$upr), rev(exp(PI$lwr))), col = "light grey", border = "light grey")
lines(1:100, exp(PI$fit), type = "l")
polygon(c(30:100, 100:30), c(exp(PI_2$upr), rev(exp(PI_2$lwr))), col = rgb(255,0,0, 50, maxColorValue = 255), border = rgb(255,0,0, 50, maxColorValue = 255))
lines(30:100, exp(PI_2$fit), type = "l", col = "red")
legend("topleft", legend = c("In Gap", 'Control', '95% CI'),
lty=c(1,1,NA),
col= c('black','red','green',NA), bty='n')
X_ingap <- data.frame('DBH.year.0'=30:100, 'InGap'=TRUE, 'Plot'=6, 'Treatment'='T2: Radial (Not in gap)')
PI_2 <- predictInterval(merMod = mixed2.0, newdata = X_ingap, level = 0.95, n.sims = 1000, stat = "median", type="linear.prediction", include.resid.var = TRUE)
X_ingap <- data.frame('DBH.year.0'=30:100, 'InGap'=TRUE, 'Plot'=6, 'Treatment'='T2: Radial')
PI_2 <- predictInterval(merMod = mixed2.0, newdata = X_ingap, level = 0.95, n.sims = 1000, stat = "median", type="linear.prediction", include.resid.var = TRUE)
plot(1:100, exp(PI$fit), type='n', xlim=c(20,60), ylim = c(15,60), xlab = "DBH: Year 0", ylab = "Estimated DBH: Year 6",
main="Tree Size Model: 'In Gap' vs Control")
polygon(c(1:100, 100:1), c(exp(PI$upr), rev(exp(PI$lwr))), col = "light grey", border = "light grey")
lines(1:100, exp(PI$fit), type = "l")
polygon(c(30:100, 100:30), c(exp(PI_2$upr), rev(exp(PI_2$lwr))), col = rgb(255,0,0, 50, maxColorValue = 255), border = rgb(255,0,0, 50, maxColorValue = 255))
lines(30:100, exp(PI_2$fit), type = "l", col = "red")
legend("topleft", legend = c("In Gap", 'Control', '95% CI'),
lty=c(1,1,NA),
col= c('black','red','green',NA), bty='n')
legend("topleft", legend = c("T2: Radial (In gap)", t), fill = c("red", "black"))
plot(1:100, exp(PI$fit), type='n', xlim=c(20,60), ylim = c(15,60), xlab = "DBH: Year 0", ylab = "Estimated DBH: Year 6",
main="Tree Size Model: 'In Gap' vs Control")
polygon(c(1:100, 100:1), c(exp(PI$upr), rev(exp(PI$lwr))), col = "light grey", border = "light grey")
lines(1:100, exp(PI$fit), type = "l")
polygon(c(30:100, 100:30), c(exp(PI_2$upr), rev(exp(PI_2$lwr))), col = rgb(255,0,0, 50, maxColorValue = 255), border = rgb(255,0,0, 50, maxColorValue = 255))
lines(30:100, exp(PI_2$fit), type = "l", col = "red")
legend("topleft", legend = c("T2: Radial (In gap)", 'Control', '95% CI'),
lty=c(1,1,NA),
col= c('black','red','green',NA), bty='n')
treatments = c("Control", "T1: Gap", "T2: Radial")
shades = c("light grey", rgb(255,0,0, 50, maxColorValue = 255), rgb(0,255,0, 50, maxColorValue = 255))
colours = c("black", "red", "green")
plot(1:100, exp(PI$fit), type='n', xlim=c(20,60), ylim = c(15,60), xlab = "DBH: Year 0", ylab = "Estimated DBH: Year 6",
main='Tree Size Model: \nTreatments vs Control')
for (i in 1:3) {
X <- data.frame('DBH.year.0'=1:100, 'InGap'=FALSE, 'Plot'=6, 'Treatment'=treatments[i])
PI <- predictInterval(merMod = mixed2.0, newdata = X, level = 0.95, n.sims = 1000, stat = "median", type="linear.prediction", include.resid.var = TRUE)
polygon(c(1:100, 100:1), c(exp(PI$upr), rev(exp(PI$lwr))), col = shades[i], border = shades[i])
lines(1:100, exp(PI$fit), type = "l", col = colours[i])
}
legend("topleft", legend = c("Control", "T1: Gap", "T2: Radial (Not in gap)", '95% CI'),
lty=c(1,1,1,NA),
col= c('black','red','green',NA), bty='n')
plot(1:100, exp(PI$fit), type='n', xlim=c(20,60), ylim = c(15,60), xlab = "DBH: Year 0", ylab = "Estimated DBH: Year 6",
main='Tree Size Model: Treatments vs Control')
for (i in 1:3) {
X <- data.frame('DBH.year.0'=1:100, 'InGap'=FALSE, 'Plot'=6, 'Treatment'=treatments[i])
PI <- predictInterval(merMod = mixed2.0, newdata = X, level = 0.95, n.sims = 1000, stat = "median", type="linear.prediction", include.resid.var = TRUE)
polygon(c(1:100, 100:1), c(exp(PI$upr), rev(exp(PI$lwr))), col = shades[i], border = shades[i])
lines(1:100, exp(PI$fit), type = "l", col = colours[i])
}
legend("topleft", legend = c("Control", "T1: Gap", "T2: Radial (Not in gap)", '95% CI'),
lty=c(1,1,1,NA),
col= c('black','red','green',NA), bty='n')
library(lme4)
library(merTools)
data = read.csv("/Users/nickjolly/Desktop/tfn/DataScienceProject/Tree DBH/dataset/all_plots.csv", stringsAsFactors = FALSE)
DBHdata = data[1:9]
DBHdata = DBHdata[!is.na(DBHdata$DBH.year.6), ]
DBHdata = DBHdata[!is.na(DBHdata$DBH.year.0), ]
DBHdata$Treatment = factor(DBHdata$Treatment)
DBHdata$Large = factor(DBHdata$Large)
DBHdatarm = DBHdata[DBHdata$DBH.year.6/DBHdata$DBH.year.0 < 1.25 & DBHdata$DBH.year.6/DBHdata$DBH.year.0 > 0.9 & DBHdata$DBH.year.0 < 80, ]
DBHdatarm$InGap = (DBHdatarm$Treatment == "T2: Radial" & DBHdatarm$Large == "Yes")
DBHdatarm$InGap = factor(DBHdatarm$InGap)
mixed2.0 = lmer(log(DBH.year.6)~log(DBH.year.0)+Treatment+InGap+log(DBH.year.0):InGap+(1|Plot), data = DBHdatarm)
X_ingap <- data.frame('DBH.year.0'=30:100, 'InGap'=TRUE, 'Plot'=6, 'Treatment'='T2: Radial')
PI_2 <- predictInterval(merMod = mixed2.0, newdata = X_ingap, level = 0.95, n.sims = 1000, stat = "median", type="linear.prediction", include.resid.var = TRUE)
X <- data.frame('DBH.year.0'=1:100, 'InGap'=FALSE, 'Plot'=6, 'Treatment'='Control')
PI <- predictInterval(merMod = mixed2.0, newdata = X, level = 0.95, n.sims = 1000, stat = "median", type="linear.prediction", include.resid.var = TRUE)
plot(1:100, exp(PI$fit), type='n', xlim=c(20,60), ylim = c(15,60), xlab = "DBH: Year 0", ylab = "Estimated DBH: Year 6",
main="Tree Size Model: 'In Gap' vs Control")
polygon(c(1:100, 100:1), c(exp(PI$upr), rev(exp(PI$lwr))), col = "light grey", border = "light grey")
lines(1:100, exp(PI$fit), type = "l")
polygon(c(30:100, 100:30), c(exp(PI_2$upr), rev(exp(PI_2$lwr))), col = rgb(255,0,0, 50, maxColorValue = 255), border = rgb(255,0,0, 50, maxColorValue = 255))
lines(30:100, exp(PI_2$fit), type = "l", col = "red")
legend("topleft", legend = c('Control',"T2: Radial (In gap)", '95% CI'),
lty=c(1,1,NA),
col= c('black','red','green',NA), bty='n')
par(bg="#fffdf3")
plot(1:100, exp(PI$fit), type='n', xlim=c(20,60), ylim = c(15,60), xlab = "DBH: Year 0", ylab = "Estimated DBH: Year 6",
main="Tree Size Model: 'In Gap' vs Control")
polygon(c(1:100, 100:1), c(exp(PI$upr), rev(exp(PI$lwr))), col = "light grey", border = "light grey")
lines(1:100, exp(PI$fit), type = "l")
polygon(c(30:100, 100:30), c(exp(PI_2$upr), rev(exp(PI_2$lwr))), col = rgb(255,0,0, 50, maxColorValue = 255), border = rgb(255,0,0, 50, maxColorValue = 255))
lines(30:100, exp(PI_2$fit), type = "l", col = "red")
legend("topleft", legend = c('Control',"T2: Radial (In gap)", '95% CI'),
lty=c(1,1,NA),
col= c('black','red','green',NA), bty='n')
summary(richness_Y3_02)
library(rstudioapi)
library(pROC)
library(lme4)
library(lmerTest)
setwd(dirname(getActiveDocumentContext()$path))
richness_df <- read.csv('../dataset/excluding weeds/richness_quadrat.csv')
# Treatments, Plot numbers, Quadrat numbers, Life forms as factors
richness_df$Treatment <- factor(richness_df$Treatment)
richness_df$Plot.Number <- factor(richness_df$Plot.Number)
richness_df$Fenced <- richness_df$Fenced=='True'
# Remove null rows
richness_df <- na.omit(richness_df)
richness_Y3_01 <- glm(X3 ~ (X0 + Treatment + Gap + Fenced)^2,
family='poisson', data=richness_df)
summary(richness_Y3_01)
richness_Y3_02 <- step(richness_Y3_01)
summary(richness_Y3_02)
library(lme4)
library(merTools)
data = read.csv("/Users/nickjolly/Desktop/tfn/DataScienceProject/Tree DBH/dataset/all_plots.csv", stringsAsFactors = FALSE)
DBHdata = data[1:9]
DBHdata = DBHdata[!is.na(DBHdata$DBH.year.6), ]
DBHdata = DBHdata[!is.na(DBHdata$DBH.year.0), ]
DBHdata$Treatment = factor(DBHdata$Treatment)
DBHdata$Large = factor(DBHdata$Large)
DBHdatarm = DBHdata[DBHdata$DBH.year.6/DBHdata$DBH.year.0 < 1.25 & DBHdata$DBH.year.6/DBHdata$DBH.year.0 > 0.9 & DBHdata$DBH.year.0 < 80, ]
DBHdatarm$InGap = (DBHdatarm$Treatment == "T2: Radial" & DBHdatarm$Large == "Yes")
DBHdatarm$InGap = factor(DBHdatarm$InGap)
mixed2.0 = lmer(log(DBH.year.6)~log(DBH.year.0)+Treatment+InGap+log(DBH.year.0):InGap+(1|Plot), data = DBHdatarm)
library(car)
summary(mixed2.0)
C <- c(0,1,1,0,0,0)
linearHypothesis(mixed2.0, C)
C <- c(0,0,1,0,0,0)
linearHypothesis(mixed2.0, C)
C <- c(0,0,0,1,0,0)
linearHypothesis(mixed2.0, C)
C <- c(0,1,0,1,1,1)
linearHypothesis(mixed2.0, C)
C <- c(0,0,1,0,0,0)
linearHypothesis(mixed2.0, C)
C <- c(0,1,0,1,1,1)
linearHypothesis(mixed2.0, C)
C <- c(0,0,0,1,1,1)
linearHypothesis(mixed2.0, C)
C <- c(0,0,0,0,1,1)
linearHypothesis(mixed2.0, C)
C <- matrix(c(0,0,1,0,0,0,0,0,0,0,1,1), nrow=2)
linearHypothesis(mixed2.0, C)
C <- c(0,0,1,0,0,0)
linearHypothesis(mixed2.0, C)
library(lmerTest)
setwd(dirname(getActiveDocumentContext()$path))
library(rstudioapi)
library(pROC)
library(lme4)
library(merTools)
library(lmerTest)
setwd(dirname(getActiveDocumentContext()$path))
df <- read.csv('../dataset/excluding weeds/understorey_cleaned.csv')
df$Plot <- factor(df$Plot)
df$Treatment <- factor(df$Treatment)
df$Fenced <- df$Fenced=="True"
df$Gap <- df$Gap=="True"
df$Shade.Tolerant <- df$Shade.Tolerant=="True"
df$Weed <- df$Weed=="True"
df$Year2 <- df$Year
df$log_abund <- log(df$Abundance)
# LF = Large Forb/herb
df_LF <- df[df$Life.Form=="Large Forb/Herb",]
LF_m1 <- lmer(Abundance~ (Treatment + Year + Year2 + Gap + Fenced + Weed)^2 +
(1|Plot) + (1|Species.Name), data=df_LF)
LF_m2 <- get_model(step(LF_m1))
summary(LF_m2)
plot(LF_m2)
RSS <- sum((df_LF$Abundance - fitted(LF_m2, df_LF))^2)
TSS <- sum((df_LF$Abundance - mean(df_LF$Abundance))^2)
R2 <- 1-RSS/TSS
R2
LF_m3 <- lmer(log_abund ~ (Treatment + Year + Year2 + Gap + Fenced + Weed)^2 +
(1|Plot) + (1|Species.Name), data=df_LF)
LF_m4 <- get_model(step(LF_m3))
summary(LF_m4)
RSS <- sum((df_LF$log_abund - fitted(LF_m4, df_LF))^2)
TSS <- sum((df_LF$log_abund - mean(df_LF$log_abund))^2)
R2 <- 1-RSS/TSS
R2
df_MTG <- df[df$Life.Form=="Medium Tufted grass/sedge",]
MTG_m1 <- lmer(Abundance~ (Treatment + Year + Year2 + Gap + Fenced)^2 +
(1|Plot) + (1|Species.Name), data=df_MTG)
MTG_m2 <- get_model(step(MTG_m1))
summary(MTG_m2)
MTG_m3 <- lmer(log_abund ~ (Treatment + Year + Year2 + Gap + Fenced + Weed)^2 +
(1|Plot) + (1|Species.Name), data=df_MTG)
MTG_m4 <- get_model(step(MTG_m3))
summary(MTG_m4)
plot(MTG_m4)
RSS <- sum((df_LF$log_abund - fitted(LF_m4, df_LF))^2)
TSS <- sum((df_LF$log_abund - mean(df_LF$log_abund))^2)
R2 <- 1-RSS/TSS
R2
