library(glmtoolbox)
library(rstudioapi)
library(pROC)
setwd(dirname(getActiveDocumentContext()$path))
rich_df = read.csv("../dataset/tables/species_richness_quadrats.csv")
# Extract data with relevant plots
relevant_plots = c(7,9,10,12)
rich_df = rich_df[rich_df$Plot.Number %in% relevant_plots,]
rich_df
# Convert some variables into different data types
str(rich_df)
rich_df$Plot.Number = factor(rich_df$Plot.Number)
rich_df$Quadrat.Number = factor(rich_df$Quadrat.Number)
rich_df$Gap <- rich_df$Gap=='True'
rich_df$Fenced <- rich_df$Fenced=='True'
# Remove null rows
rich_df <- na.omit(rich_df)
View(rich_df)
rich_h1_df = rich_df[rich_df$Fenced == 'TRUE',]
View(rich_df)
View(rich_h1_df)
summary(b_rich_Y0_Y3_try_01)
# Model 1: Treatment + Gap + Treatment:Gap
b_rich_Y0_Y3_try_01 = glm(Y0.Y3.Increase ~ (Treatment + Gap)^2, family='binomial', data=rich_h1_df)
library(glmtoolbox)
library(rstudioapi)
library(pROC)
setwd(dirname(getActiveDocumentContext()$path))
rich_df = read.csv("../dataset/tables/species_richness_quadrats.csv")
# Extract data with relevant plots
relevant_plots = c(7,9,10,12)
rich_df = rich_df[rich_df$Plot.Number %in% relevant_plots,]
rich_df
# Convert some variables into different data types
str(rich_df)
rich_df$Plot.Number = factor(rich_df$Plot.Number)
rich_df$Quadrat.Number = factor(rich_df$Quadrat.Number)
rich_df$Gap <- rich_df$Gap=='True'
rich_df$Fenced <- rich_df$Fenced=='True'
# Remove null rows
rich_df <- na.omit(rich_df)
rich_df$Y0.Y3.Increase <- rich_df$X3 > rich_df$X0
rich_df$Y0.Y3.Increase <- as.numeric(rich_df$Y0.Y3.Increase)
rich_df$Y3.Y6.Increase <- rich_df$X6 > rich_df$X3
rich_df$Y3.Y6.Increase <- as.numeric(rich_df$Y3.Y6.Increase)
rich_df$Y0.Y6.Increase <- rich_df$X6 > rich_df$X0
rich_df$Y0.Y6.Increase <- as.numeric(rich_df$Y0.Y6.Increase)
confusion <- function(model, y, data, threshold) {
y_hat <- predict(model, data, type='response') > threshold
conf <- matrix(0, nrow=2, ncol=2)
rownames(conf) <- c('Predict 1', 'Predict 0')
colnames(conf) <- c('Observe 1', 'Observe 0')
conf[1,1] <- sum(y==1 & y_hat==1)
conf[1,2] <- sum(y==0 & y_hat==1)
conf[2,1] <- sum(y==1 & y_hat==0)
conf[2,2] <- sum(y==0 & y_hat==0)
tp_rate <- conf[1,1] / sum(conf[1,]) # Sensitivity
tn_rate <- conf[2,2] / sum(conf[2,]) # Specificity
return(list(Confusion=conf, Sensitivity=tp_rate, Specificity=tn_rate))
}
# Model 1: predictors with all main & interaction effects
b_rich_Y0_Y3_01 = glm(Y0.Y3.Increase ~ (Treatment + Gap + Fenced)^2, family='binomial', data=rich_df)
summary(b_rich_Y0_Y3_01)
# Model 2: Step-wise selection from Model 1 (AIC)
b_rich_Y0_Y3_02 = step(b_rich_Y0_Y3_try, k=2)
library(glmtoolbox)
library(rstudioapi)
library(pROC)
setwd(dirname(getActiveDocumentContext()$path))
rich_df = read.csv("../dataset/tables/species_richness_quadrats.csv")
# Extract data with relevant plots
relevant_plots = c(7,9,10,12)
rich_df = rich_df[rich_df$Plot.Number %in% relevant_plots,]
rich_df
# Convert some variables into different data types
str(rich_df)
rich_df$Plot.Number = factor(rich_df$Plot.Number)
rich_df$Quadrat.Number = factor(rich_df$Quadrat.Number)
rich_df$Gap <- rich_df$Gap=='True'
rich_df$Fenced <- rich_df$Fenced=='True'
# Remove null rows
rich_df <- na.omit(rich_df)
rich_df$Y0.Y3.Increase <- rich_df$X3 > rich_df$X0
rich_df$Y0.Y3.Increase <- as.numeric(rich_df$Y0.Y3.Increase)
rich_df$Y3.Y6.Increase <- rich_df$X6 > rich_df$X3
rich_df$Y3.Y6.Increase <- as.numeric(rich_df$Y3.Y6.Increase)
rich_df$Y0.Y6.Increase <- rich_df$X6 > rich_df$X0
rich_df$Y0.Y6.Increase <- as.numeric(rich_df$Y0.Y6.Increase)
confusion <- function(model, y, data, threshold) {
y_hat <- predict(model, data, type='response') > threshold
conf <- matrix(0, nrow=2, ncol=2)
rownames(conf) <- c('Predict 1', 'Predict 0')
colnames(conf) <- c('Observe 1', 'Observe 0')
conf[1,1] <- sum(y==1 & y_hat==1)
conf[1,2] <- sum(y==0 & y_hat==1)
conf[2,1] <- sum(y==1 & y_hat==0)
conf[2,2] <- sum(y==0 & y_hat==0)
tp_rate <- conf[1,1] / sum(conf[1,]) # Sensitivity
tn_rate <- conf[2,2] / sum(conf[2,]) # Specificity
return(list(Confusion=conf, Sensitivity=tp_rate, Specificity=tn_rate))
}
# Model 1: predictors with all main & interaction effects
b_rich_Y0_Y3_01 = glm(Y0.Y3.Increase ~ (Treatment + Gap + Fenced)^2, family='binomial', data=rich_df)
summary(b_rich_Y0_Y3_01)
# Model 2: Step-wise selection from Model 1 (AIC)
b_rich_Y0_Y3_02 = step(b_rich_Y0_Y3_01, k=2)
summary(b_rich_Y0_Y3_02)
# TreatmentRadial:FencedTRUE is not significant at 5% significance level
#compare model 2 and 1
anova(b_rich_Y0_Y3_02, b_rich_Y0_Y3_01)
pchisq(0.27015,2)
# there's no significant evidence that model 1 is better than model 2
# Model 3: only include main effects
b_rich_Y0_Y3_03 = glm(Y0.Y3.Increase ~ Treatment + Gap + Fenced, family='binomial', data=rich_df)
summary(b_rich_Y0_Y3_03)
# Model 4: Step-wise selection from Model 3 (AIC)
step(b_rich_Y0_Y3_03)
# does not give new model
# compare model 3 and 2
anova(b_rich_Y0_Y3_03, b_rich_Y0_Y3_02)
pchisq(3.5637, 1)
# there's no significant evidence that model 2 is better than model 3
# However, model 2 has lower AIC than model 3
# Model 2 Goodness of fit
r <- roc(rich_df$Y0.Y3.Increase, predict(b_rich_Y0_Y3_02, rich_df, type = 'response'))
auc(r)
plot.roc(r)
c <- confusion(b_rich_Y0_Y3_02, rich_df$Y0.Y3.Increase, rich_df, 0.5)
c$Confusion
c$Sensitivity # True Positive Rate
c$Specificity
# Model 3 Goodness of fit
r <- roc(rich_df$Y0.Y3.Increase, predict(b_rich_Y0_Y3_03, rich_df, type = 'response'))
auc(r)
plot.roc(r)
c <- confusion(b_rich_Y0_Y3_03, rich_df$Y0.Y3.Increase, rich_df, 0.5)
c$Confusion
c$Sensitivity # True Positive Rate
c$Specificity
# Model 2 seems to have better goodness of fit
# Choose model 2
exp(-1.9845+1.4842)
1-exp(-1.9845+1.4842)
rich_h1_df = rich_df[rich_df$Fenced == 'TRUE',]
# Model 1: Treatment + Gap + Treatment:Gap
b_rich_Y0_Y3_try_01 = glm(Y0.Y3.Increase ~ (Treatment + Gap)^2, family='binomial', data=rich_h1_df)
summary(b_rich_Y0_Y3_try_01)
# None of predictors appears significant
# Model 2: Step-wise selection from Model 1 (AIC)
b_rich_Y0_Y3_try_02 = step(b_rich_Y0_Y3_01)
summary(b_rich_Y0_Y3_try_02)
# model with only 1 predictor: Gap (insignificant)
# Treatment has an insignificant effect on the response at 5% significance level
# Model 3: Treatment as the only predictor
b_rich_Y0_Y3_try_03 = glm(Y0.Y3.Increase ~ Treatment, family='binomial', data=rich_h1_df)
summary(b_rich_Y0_Y3_try_03)
# Treatment has an insignificant effect on the response at 5% significance level
# higher AIC than model 2
# compare model 2 with model 1
anova(b_rich_Y0_Y3_try_02,b_rich_Y0_Y3_try_01)
summary(b_rich_Y0_Y3_01)
# Model 2: Step-wise selection from Model 1 (AIC)
b_rich_Y0_Y3_02 = step(b_rich_Y0_Y3_01, k=2)
summary(b_rich_Y0_Y3_02)
rich_df = read.csv("./data_generated/richness_calculation.csv")
