knitr::opts_chunk$set(echo = TRUE)
library(MASS)
library(survival)
library(fitdistrplus)
CWDdata = read.csv("/Users/nickjolly/Desktop/tfn/DataScienceProject/Coarse Woody Debris/dataset/output.csv")
CWDdata[is.na(CWDdata)] <- 0
CWDdata$difference = CWDdata$year.6 - CWDdata$year.0
View(CWDdata)
hist(CWDdata$difference)
plot(CWDdata$difference, col = factor(CWDdata$treatment))
legend("topleft", legend = c("Gap", "Control", "Radial"), col=factor(CWDdata$treatment), pch=1)
boxplot(CWDdata$difference~CWDdata$treatment, xlab="Treatment", ylab="CWD difference", main="CWD difference against different treatments")
CWDdata["abs_diff"] = CWDdata["difference"] + abs(min(CWDdata["difference"])) + 1
CWDdatarm3 = CWDdata[-c(3),]
#guassian model + plot3 removed
guass.model = glm(difference ~ treatment , family = gaussian, data = CWDdatarm3)
summary(guass.model)
par(mfrow = c(2,2))
plot(guass.model)
pure.guass.model <- glm(difference ~ 1 , family = gaussian, data = CWDdatarm3)
anova( pure.guass.model, guass.model, test = "F")
# the plot here shows that the plot 8,9,12 are always outliers, since the F-stat is <0.05, we will reject the null at 5% significance level, so the treatment is useful in predicting the difference, both of them are positive, so an increasing in the difference is indicated
# model using poisson + abs_diff
#Poisson GLM
#visualisation and test if the data is poisson
hist(CWDdatarm3$abs_diff)
new_abs_diff <- ceiling(CWDdatarm3$abs_diff) # scale it to fit the poisson model
poisson.model1=fitdist(new_abs_diff , "pois")
poisson.model1
poisson.lambda=poisson.model1$estimate
plot(poisson.model1)
n=length(new_abs_diff)
samp.pct <- (1:n-0.5)/n
qqplot(x=qpois(samp.pct,poisson.lambda), y=sort(new_abs_diff), xlab = 'Theoretical quantiles', ylab = 'Empirical quantiles', main='Q-Q plot Poisson')
abline(0,1,col="red")
#fit the model
model0 = glm(new_abs_diff ~ treatment, family = poisson, data = CWDdatarm3)
summary(model0)
par(mfrow = c(2,2))
plot(model0)
#goodness of fit
qchisq(0.95,8)
library(msme)
P__disp(model0)
#adequate, but the dispersion is far greater than 1, so we need to fit the quasipoisson model
model1 <- glm(new_abs_diff ~ treatment, family = quasipoisson, data = CWDdatarm3)
summary(model1)
par(mfrow = c(2,2))
plot(model1)
#goodness of fit
qchisq(0.95,model1$df.residual)
library(msme)
P__disp(model1)
# model using negative binomial + abs_diff
#Negative Binomial GLM
#visualisation and test if the data is poisson
nb.model1=fitdist(new_abs_diff, "nbinom")
nb.model1
nb.size=nb.model1$estimate[1]
nb.mu = nb.model1$estimate[2]
nb.prob=nb.size/(nb.size+nb.mu)
plot(nb.model1)
n=length(new_abs_diff)
samp.pct <- (1:n-0.5)/n
qqplot(x=qnbinom(samp.pct,nb.size, nb.prob), y=sort(new_abs_diff), xlab = 'Theoretical quantiles', ylab = 'Empirical quantiles', main='Q-Q plot Negative Binomial')
abline(0,1,col="red")
#fit the model
model2 = glm.nb(new_abs_diff ~ treatment, data = CWDdatarm3)
summary(model2)
par(mfrow = c(2,2))
plot(model2)
#goodness of fit
qchisq(0.95,8)
library(msme)
P__disp(model2)
# both coefficient is positive and significant, but the pearson coefficient is less than 15.51, so we fail to reject them from this perpective
## Gamma + abs_diff + inverse
new_abs_diff <- ceiling(CWDdatarm3$abs_diff) # scale it to fit the gamma model
gamma.model1=fitdist(new_abs_diff , "gamma")
gamma.model1
gamma.alpha=gamma.model1$estimate[1]
gamma.beta =gamma.model1$estimate[2]
plot(gamma.model1)
n=length(new_abs_diff)
samp.pct <- (1:n-0.5)/n
qqplot(x=qgamma(samp.pct,gamma.alpha, gamma.beta), y=sort(new_abs_diff), xlab = 'Theoretical quantiles', ylab = 'Empirical quantiles', main='Q-Q plot gamma')
abline(0,1,col="red")
model3 = glm(new_abs_diff ~ treatment, family = Gamma(link = "inverse"), data = CWDdatarm3)
summary(model3)
par(mfrow = c(2,2))
plot(model3)
#goodness of fit
qchisq(0.95,10)
library(msme)
P__disp(model3)
# model fit is ok, but worse than the poisson, and fail to reject the null
