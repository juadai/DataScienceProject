tss = sum((DBHdrop$Tree.growth-mean(DBHdrop$Tree.growth))^2) #TSS
rss = sum((DBHdrop$Tree.growth-fitted(glm2.1))^2) #RSS
tss; rss
(tss-rss)/tss #R^2
plot(glm2.1)
plot(DBHdrop$Tree.growth, fitted(glm2.1), type = "p", col = DBHdrop$Treatment)
abline(0, 1)
DBHdrop[DBHdrop$Tree.growth >= 8, ]
DBHremove = DBHdrop[DBHdrop$Tree.growth < 8, ]
glm1.2 = glm(Tree.growth~Treatment+Large+DBH.year.0+Large:DBH.year.0+Treatment:Large, data = DBHremove)
summary(glm1.2)
tss = sum((DBHremove$Tree.growth-mean(DBHremove$Tree.growth))^2) #TSS
rss = sum((DBHremove$Tree.growth-fitted(glm1.2))^2) #RSS
tss; rss
(tss-rss)/tss #R^2
plot(glm1.2)
plot(DBHremove$Tree.growth, fitted(glm1.2), type = "p", col = DBHremove$Treatment)
abline(0, 1)
glm2.2 = glm(Tree.growth~Treatment+Large+DBH.year.0+Treatment:DBH.year.0+Large:DBH.year.0, family = "Gamma", data = DBHremove)
summary(glm2.2)
tss = sum((DBHremove$Tree.growth-mean(DBHremove$Tree.growth))^2) #TSS
rss = sum((DBHremove$Tree.growth-fitted(glm2.2))^2) #RSS
tss; rss
(tss-rss)/tss #R^2
plot(glm2.2)
plot(DBHremove$Tree.growth, fitted(glm2.2), type = "p", col = DBHremove$Treatment)
abline(0, 1)
library(lme4)
mixed1.0 = lmer(Tree.growth~DBH.year.0+Large+Treatment+DBH.year.0:Large+Treatment:Large+(DBH.year.0+Large+Treatment+DBH.year.0:Large+Treatment:Large|Plot), data = DBHdata)
summary(mixed1.0)
VarCorr(mixed1.0)
y.hat1.0 <- fitted(mixed1.0) # Fitted values
int.hat1.0 <- ranef(mixed1.0)[[1]][[1]] # Predicted intercepts
res.hat1.0 <- residuals(mixed1.0) # Estimated residuals
tss = sum((DBHdata$Tree.growth-mean(DBHdata$Tree.growth))^2) #TSS
rss = sum((DBHdata$Tree.growth-y.hat1.0)^2) #RSS
tss; rss; (tss-rss)/tss #R^2
qqnorm(int.hat1.0, main="Random Intercepts"); qqline(int.hat1.0)
qqnorm(res.hat1.0, main="Residuals"); qqline(res.hat1.0)
plot(y.hat1.0, res.hat1.0, xlab="Fitted Values", ylab="Residuals")
abline(h=0, lty=2)
plot(DBHdata$Tree.growth, y.hat1.0, col = DBHdata$Treatment)
abline(0, 1)
plot(DBHdata$Tree.growth, y.hat1.0, col = DBHdata$Large)
abline(0, 1)
mixed1.1 = lmer(Tree.growth~DBH.year.0+Large+Treatment+DBH.year.0:Large+Treatment:Large+(DBH.year.0+Large+Treatment+DBH.year.0:Large+Treatment:Large|Plot), data = DBHremove)
summary(mixed1.1)
VarCorr(mixed1.1)
y.hat1.1 <- fitted(mixed1.1) # Fitted values
int.hat1.1 <- ranef(mixed1.1)[[1]][[1]] # Predicted intercepts
res.hat1.1 <- residuals(mixed1.1) # Estimated residuals
tss = sum((DBHremove$Tree.growth-mean(DBHremove$Tree.growth))^2) #TSS
rss = sum((DBHremove$Tree.growth-y.hat1.1)^2) #RSS
tss; rss; (tss-rss)/tss #R^2
qqnorm(int.hat1.1, main="Random Intercepts"); qqline(int.hat1.1)
qqnorm(res.hat1.1, main="Residuals"); qqline(res.hat1.1)
plot(y.hat1.1, res.hat1.1, xlab="Fitted Values", ylab="Residuals")
abline(h=0, lty=2)
plot(DBHremove$Tree.growth, y.hat1.1, col = DBHremove$Treatment)
abline(0, 1)
plot(DBHremove$Tree.growth, y.hat1.1, col = DBHremove$Large)
abline(0, 1)
plot(DBHdata$DBH.year.0, DBHdata$DBH.year.6, type = "p") # 8 points outside main group
DBHrm = DBHdata[DBHdata$Tree.growth < 10 & DBHdata$DBH.year.0 < 80, ] # dataframe without the 8 rows
plot(DBHdata$DBH.year.0, DBHdata$DBH.year.6, type = "p", col = DBHdata$Treatment)
legend("bottomright", legend = c("Control", "T1", "T2"), fill = c("black", "red", "green"))
plot(DBHdata$DBH.year.0, DBHdata$DBH.year.6, type = "p", col = DBHdata$Large)
legend("bottomright", legend = c("not-large", "large"), fill = c("black", "red"))
plot(DBHrm$DBH.year.0, DBHrm$DBH.year.6, type = "p", col = DBHrm$Treatment)
legend("bottomright", legend = c("Control", "T1", "T2"), fill = c("black", "red", "green"))
plot(DBHrm$DBH.year.0, DBHrm$DBH.year.6, type = "p", col = DBHrm$Large)
legend("bottomright", legend = c("not-large", "large"), fill = c("black", "red"))
cor(DBHdata$DBH.year.0, DBHdata$DBH.year.6) #0.9679595
# best model derived from DBH.year.6~DBH.year.0*Treatment*Large
glm3.0 = glm(DBH.year.6~DBH.year.0+Treatment+Large+DBH.year.0:Large+Treatment:Large, data = DBHdata)
summary(glm3.0)
tss = sum((DBHdata$DBH.year.6-mean(DBHdata$DBH.year.6))^2) #TSS
rss = sum((DBHdata$DBH.year.6-glm3.0$fitted.values)^2) #RSS
(tss-rss)/tss #R^2 = 0.9541006
par(mfrow=c(2,2))
plot(glm3.0)
par(mfrow=c(1,1))
plot(DBHdata$DBH.year.6, glm3.0$fitted.values, type = "p", col = DBHdata$Treatment)
legend("bottomright", legend = c("Control", "T1", "T2"), fill = c("black", "red", "green"))
abline(0,1)
plot(DBHdata$DBH.year.6, glm3.0$fitted.values, type = "p", col = DBHdata$Large)
legend("bottomright", legend = c("not-large", "large"), fill = c("black", "red"))
abline(0,1)
# same formula as glm3.0
glm4.0 = glm(DBH.year.6~DBH.year.0+Treatment+Large+DBH.year.0:Large+Treatment:Large, data = DBHrm)
summary(glm4.0)
tss = sum((DBHrm$DBH.year.6-mean(DBHrm$DBH.year.6))^2) #TSS
rss = sum((DBHrm$DBH.year.6-glm4.0$fitted.values)^2) #RSS
(tss-rss)/tss #R^2 = 0.9801139
par(mfrow=c(2,2))
plot(glm4.0)
par(mfrow=c(1,1))
plot(DBHrm$DBH.year.6, glm4.0$fitted.values, type = "p", col = DBHrm$Treatment)
legend("bottomright", legend = c("Control", "T1", "T2"), fill = c("black", "red", "green"))
abline(0,1)
plot(DBHrm$DBH.year.6, glm4.0$fitted.values, type = "p", col = DBHrm$Large)
legend("bottomright", legend = c("not-large", "large"), fill = c("black", "red"))
abline(0,1)
glm5.0 = glm(log(DBH.year.6)~(log(DBH.year.0)+Treatment+Large+DBH.year.0:Large+Treatment:Large, data = DBHrm)
glm5.0 = glm(log(DBH.year.6)~(log(DBH.year.0)+Treatment+Large)^2, data = DBHrm)
summary(glm5.0)
plot(glm5.0)
anova(glm5.0, glm6.0)
glm6.0 <- glm(log(DBH.year.6)~log(DBH.year.0)+Treatment+Large, data = DBHrm)
anova(glm5.0, glm6.0)
anova(glm6.0, glm5.0, test='Chisq')
glm7.0 <- glm(log(DBH.year.6)~(log(DBH.year.0)+Large)^2, data = DBHrm)
anova(glm7.0, glm5.0, test='Chisq')
glm7.0 <- glm(log(DBH.year.6)~log(DBH.year.0)+Large + Treatment, data = DBHrm)
anova(glm7.0, glm5.0, test='Chisq')
glm7.0 <- glm(log(DBH.year.6)~(log(DBH.year.0)+Large)^2 + Treatment, data = DBHrm)
anova(glm7.0, glm5.0, test='Chisq')
glm7.0 <- glm(log(DBH.year.6)~log(DBH.year.0)+ Treatment)^2, data = DBHrm)
anova(glm7.0, glm5.0, test='Chisq')
glm7.0 <- glm(log(DBH.year.6)~log(DBH.year.0)+ Treatment)^2, data = DBHrm)
glm7.0 <- glm(log(DBH.year.6)~(log(DBH.year.0)+ Treatment)^2, data = DBHrm)
anova(glm7.0, glm5.0, test='Chisq')
summary(glm7.0)
exp(0.043384)
knitr::opts_chunk$set(echo = TRUE)
setwd("~/Desktop/capstone/analysis/Juan/Understorey_priority2&low")
knitr::opts_chunk$set(echo = TRUE)
library(fitdistrplus)
df = read.csv("./understorey_output.csv")
# richness visualisation
hist(df$abs_richness)
plotnum <- as.factor(df$Plot_number)
treatment <- as.factor(df$Treatment)
plot(df$abs_richness, col = c(seq(1,12, length.out = 12))[as.factor(df$Plot_number)], main = "Scatterplot for richness (Plot_number)")
legend("bottomright", legend = c(seq(1,12, length.out = 12)), col = levels(plotnum), pch=1)
plot(df$abs_richness, col = c(seq(1,3, length.out = 3))[as.factor(df$Treatment)], main ="Scatterplot for richness (Treatment)")
legend("bottomright", legend = c(levels(treatment)), col = seq(1,3, length.out = 3), pch=1)
boxplot(df$abs_richness~df$Treatment, xlab="Treatment", ylab="Understorey richness difference", main="Absolute Richness difference against different treatments")
# richness visualisation
hist(df$abs_diversity)
plotnum <- as.factor(df$Plot_number)
treatment <- as.factor(df$Treatment)
plot(df$abs_diversity, col = c(seq(1,12, length.out = 12))[as.factor(df$Plot_number)], main = "Scatterplot for diveristy (Plot_number)")
legend("bottomright", legend = c(seq(1,12, length.out = 12)), col = levels(plotnum), pch=1)
plot(df$abs_diversity, col = c(seq(1,3, length.out = 3))[as.factor(df$Treatment)], main ="Scatterplot for diveristy (Treatment)")
legend("bottomright", legend = c(levels(treatment)), col = seq(1,3, length.out = 3), pch=1)
boxplot(df$abs_diversity~df$Treatment, xlab="Treatment", ylab="Understorey diveristy difference", main="Absolute diveristy difference against different treatments")
boxplot(df$abs_diversity~df$Plot_number, xlab="Treatment", ylab="Understorey diveristy difference", main="Absolute diveristy difference against different treatments")
# richness visualisation
hist(df$relative_abundance)
plotnum <- as.factor(df$Plot_number)
treatment <- as.factor(df$Treatment)
plot(df$relative_abundance, col = c(seq(1,12, length.out = 12))[as.factor(df$Plot_number)], main = "Scatterplot for relative abundance (Plot_number)")
legend("topright", legend = c(seq(1,12, length.out = 12)), col = levels(plotnum), pch=1)
plot(df$relative_abundance, col = c(seq(1,3, length.out = 3))[as.factor(df$Treatment)], main ="Scatterplot for relative abundance (Treatment)")
legend("topright", legend = c(levels(treatment)), col = seq(1,3, length.out = 3), pch=1)
boxplot(df$relative_abundance~df$Treatment, xlab="Treatment", ylab="Understorey relative abundance difference", main="Absolute relative abundance difference against different treatments")
boxplot(df$relative_abundance~df$Plot_number, xlab="Treatment", ylab="Understorey relative abundance difference", main="Absolute relative abundance difference against different treatments")
# model using gaussian
guas.model=fitdist(df$abs_diversity, "norm")
guas.model
guas.mean=guas.model$estimate[1]
guas.sd =guas.model$estimate[2]
plot(guas.model)
n=length(df$abs_diversity)
samp.pct <- (1:n-0.5)/n
qqplot(x=qnorm(samp.pct,guas.mean, guas.sd), y=sort(df$abs_diversity), xlab = 'Theoretical quantiles', ylab = 'Empirical quantiles', main='Q-Q plot Guassian')
abline(0,1,col="red")
guass.model = glm(abs_diversity ~ Treatment  + as.factor(Plot_number) +as.factor(Quadrat_number), family = gaussian, data = df)
summary(guass.model)
par(mfrow = c(2,2))
plot(guass.model)
pure.guass.model <- glm(abs_diversity ~ 1 , family = gaussian, data = df)
anova( pure.guass.model, guass.model, test = "F")
# the coefficients is significant in predicting the abs_diversity
# model using gaussian
model_rm = glm(abs_diversity ~ Treatment  + as.factor(Quadrat_number), family = gaussian, data = df)
summary(model_rm)
par(mfrow = c(2,2))
plot(model_rm)
anova(pure.guass.model, model_rm, test = "F")
# both coefficient is not significant in predicting the diversity, the only significant regressor is plot_number
# model using gaussian
model1 = glm(diversity_change_rate ~ Treatment + as.factor(Plot_number) + as.factor(Quadrat_number), family = gaussian, data = df)
summary(model1)
par(mfrow = c(2,2))
plot(model1)
rate.guass.model <- glm(diversity_change_rate ~ 1 , family = gaussian, data = df)
anova(rate.guass.model, model1, test = "F")
# significant in 5% significance level
# model using gaussian
model = glm(abs_diversity ~ Treatment + as.factor(Plot_number) + as.factor(Quadrat_number), family = gaussian, data = df)
model_selected1 <-step(model, scope=~.)
summary(model_selected1)
par(mfrow = c(2,2))
plot(model_selected1)
#The significant variables are the plot number, all other variables are not significant in predicting the diversity
# model using gamma with inverse link function on relative diversity
gamma.model1=fitdist(df$relative_diversity, "gamma")
gamma.model1
gamma.alpha=gamma.model1$estimate[1]
gamma.beta =gamma.model1$estimate[2]
plot(gamma.model1)
n=length(df$relative_diversity)
samp.pct <- (1:n-0.5)/n
qqplot(x=qgamma(samp.pct,gamma.alpha, gamma.beta), y=sort(df$relative_diversity), xlab = 'Theoretical quantiles', ylab = 'Empirical quantiles', main='Q-Q plot gamma')
abline(0,1,col="red")
model2 = glm(relative_diversity~ Treatment + as.factor(Plot_number) + as.factor(Quadrat_number), family = Gamma(), data = df)
summary(model2)
par(mfrow = c(2,2))
plot(model2)
#goodness of fit
qchisq(0.95,10)
library(msme)
P__disp(model2)
# model fit is adequate, reject the null
# model using gamma with inverse link function + on abs_diversity
abs_diversity <- df$abs_diversity + (-min(df$abs_diversity) + 1)
gamma.model2=fitdist(abs_diversity, "gamma")
gamma.model2
gamma.alpha2=gamma.model2$estimate[1]
gamma.beta2 =gamma.model2$estimate[2]
plot(gamma.model2)
n=length(abs_diversity)
samp.pct2 <- (1:n-0.5)/n
qqplot(x=qgamma(samp.pct2,gamma.alpha2, gamma.beta2), y=sort(abs_diversity), xlab = 'Theoretical quantiles', ylab = 'Empirical quantiles', main='Q-Q plot gamma')
abline(0,1,col="red")
model3 = glm(abs_diversity+ (-min(abs_diversity) + 1)~ Treatment + as.factor(Plot_number) + as.factor(Quadrat_number), family = Gamma(), data = df)
summary(model3)
par(mfrow = c(2,2))
plot(model3)
#goodness of fit
qchisq(0.95,10)
library(msme)
P__disp(model3)
# model fit is adequate, reject the null, but the fit is clearly worse than the relative_diversity
# model using gamma with log link function + abs_diversity
model4 = glm(abs_diversity+ (-min(abs_diversity) + 1) ~ Treatment + as.factor(Plot_number) + as.factor(Quadrat_number), family = Gamma(link = "log"), data = df)
summary(model4)
par(mfrow = c(2,2))
plot(model4)
#goodness of fit
qchisq(0.95,10)
library(msme)
P__disp(model4)
# model fit is adequate, reject the null, but the fit is clearly worse than the relative_diversity
# model using gamma with log link function + relative diversity
model5 = glm(relative_diversity~ Treatment + as.factor(Plot_number) + as.factor(Quadrat_number), family = Gamma(link = "inverse"), data = df)
summary(model5)
par(mfrow = c(2,2))
plot(model5)
#goodness of fit
qchisq(0.95,10)
library(msme)
P__disp(model5)
# model fit is adequate, reject the null, fit better than the abs_diversity
read.csv('/Users/nickjolly/Desktop/tfn/DataScienceProject/Understorey/contingency tables/output/spcies_richness_quadrats.csv')
df <- read.csv('/Users/nickjolly/Desktop/tfn/DataScienceProject/Understorey/contingency tables/output/spcies_richness_quadrats.csv')
View(df)
df['Change.0-6'] > 0
df$Change.0.6 > 0
df$Plot.Number <- factor(df$Plot.Number)
df$Response <- factor(df$Change.0.6 > 0)
df$Response <- factor(df$Change.0.6 > 0)
df
df$Response
levels(df$Response) <- 0, 1
levels(df$Response) <- c(0, 1)
df$Response
levels(df$Response)
levels(df$Response) <- c(0, 1)
df$Response <- factor(df$Change.0.6 > 0)
levels(df$Response)
levels(df$Response) <- c(0, 1)
df$Treatment <- factor(df$Treatment)
df$Response <- factor(df$Change.0.6 > 0)
levels(df$Response)
levels(df$Response) <- c(0, 1)
glm(Response ~ . , family='Binomial', data=df)
glm(Response ~ . , family='binomial', data=df)
df$Response <- df$Change.0.6 > 0
df$Response
as.numeric(df$Response)
View(df)
df$Response <- as.numeric(df$Change.0.6 > 0)
glm(Response ~ . , family='binomial', data=df)
str(df)
glm(Response ~ Treatment + Fenced + Gap, family='binomial', data=df)
model1 <- glm(Response ~ Treatment + Fenced + Gap, family='binomial', data=df)
summary(model1)
model1 <- glm(Response ~ (Treatment + Fenced + Gap)^2, family='binomial', data=df)
summary(model1)
model1 <- glm(Response ~ Treatment + Fenced + Gap, family='binomial', data=df)
summary(model1)
model1 <- glm(Response ~ (Treatment + Fenced + Gap)^2, family='binomial', data=df)
model2 <- glm(Response ~ Treatment + Fenced + Gap, family='binomial', data=df)
anova(model2, model1)
anova(model2, model1, test='Chi')
anova(model1)
anova(model1, test='Chi')
df$Treatment <- factor(df$Treatment)
View(df)
model1 <- glm(Response ~ (Treatment + Fenced + Gap)^2, family='binomial', data=df)
summary(model1)
model2 <- glm(Response ~ Treatment + Fenced + Gap, family='binomial', data=df)
summary(model2)
anova(model2, model1, test='Chi')
anova(model1, test='Chi')
summary(model2)
View(df)
new_x <- data.frame('Treatment'='Control', 'Fenced'=FALSE, 'Gap'=TRUE)
predict(model2, new_x)
step(model2)
model3 <- glm(Response ~ Treatment + Gap, data=df)
model3 <- glm(Response ~ Treatment + Gap, data=df)
new_x <- data.frame('Treatment'='Control', 'Fenced'=FALSE, 'Gap'=TRUE)
anova(model2, model1, test='Chi')
anova(model3, model2, test='Chi')
anova(model2, model3, test='Chi')
anova(model3, model2, test='Chi')
summary(model3)
anova(model3, model2, test='Chi')
anova(model2, model3, test='Chi')
anova(model2, model1, test='Chi')
anova(model2, model3, test='Chi')
anova(model3, model2, test='Chi')
summary(model3)
eta_gap <- 0.39273 -0.15471
exp(eta_gap)/(1+exp(eta_gap))
exp(0.39273)/(1+exp(0.39273))
model4 <- glm(Response ~ (Treatment + Gap)^2, data=df)
summary(model4)
step(model4)
plot(model4)
plot(model3)
df[1,]
predict(model3, df[1,])
predict(model3, df[2,])
predict(model3, df[3,])
predict(model3, df[500,])
predict(model3, df[40,])
predict(model3, df[42,])
predict(model3, df[43,])
predict(model3, df[44,])
predict(model3, df[41,])
View(df)
predict(model3, df[139,])
plot(df)
plot(df[c('Treatment', X0)])
plot(df$Treatment, df$X0)
plot(df$Treatment, df$Change.0.6)
plot(df$Treatment, df$Change.0.6)
summary(model3)
model1 <- glm(Response ~ (Treatment + Fenced + Gap)^2, family='binomial', data=df)
summary(model1)
model2 <- glm(Response ~ Treatment + Fenced + Gap, family='binomial', data=df)
summary(model2)
model3 <- glm(Response ~ Treatment + Gap, family='binomial', data=df)
summary(model3)
?glm
df
str(df)
model10 <- glm(X6 ~ X0 + X3 + Treatment + Fenced + Gap, data=df)
summary_model10
summary(model10)
plot(model10)
model10 <- glm(X6 ~ X0 + X3 + Treatment + Fenced + Gap, data=df)
model11 <- glm(log(X6) ~ log(X0) + log(X3) + Treatment + Fenced + Gap, data=df)
summary(model11)
plot(model11)
summary(model11)
model12 <- glm(log(X6) ~ log(X0) + Treatment + Fenced + Gap, data=df)
summary(model12)
df2 <- read.csv('/Users/nickjolly/Desktop/tfn/DataScienceProject/Understorey/contingency tables/output/spcies_divers_quadrats.csv')
df2
str(df2)
df$Response <- as.numeric(df$Change.0.6>0)
df$Treatment <- factor(df$Treatment)
str(df2)
df2$Response <- as.numeric(df$Change.0.6>0)
df2$Treatment <- factor(df$Treatment)
plot(df2)
plot(df2, pch='.')
model1 <- glm(Response ~ Treatment + Fenced + Gap, data=df2)
summary(model2)
pchisq(356.79, 282)
1-pchisq(356.79, 282)
model1 <- glm(Response ~ Treatment + Fenced + Gap, data=df2)
summary(model1)
y_hat <- predict(model1, df2)
y-y_hat
y <- df$Response
y-y_hat
plot(y-y_hat)
plot(sorted(y_hat))
plot(sort(y_hat))
summary(model1)
step(model1)
model1 <- glm(Response ~ Treatment + Fenced + Gap, family='binomial', data=df2)
summary(model1)
step(model1)
anova(model2, moodel1)
anova(model2, model1)
model2 <- steep(model1)
anova(model2, model1)
model2 <- step(model1)
anova(model2, model1)
anova(model2, model1, test='Chi')
model2 <- step(model1)
y_hat <- predict(model2, df2)
plot(sort(y_hat))
1/(1+exp(-y_hat))
plot(1/(1+exp(-y_hat)))
plot(sort(1/(1+exp(-y_hat))))
?sigmoid
str(df2)
df$X3>df$X0
df2$Response <- as.numeric(df$X3>df$X0)
df2$Treatment <- factor(df$Treatment)
plot(df2, pch='.')
model1 <- glm(Response ~ Treatment + Fenced + Gap, family='binomial', data=df2)
model2 <- step(model1)
df2$Treatment <- factor(df$Treatment)
model1 <- glm(Response ~ Treatment + Fenced + Gap, family='binomial', data=df2)
model2 <- step(model1)
step(model1)
summary(model1)
summary(modle2)
summary(model2)
model1 <- glm(Response ~ (Treatment + Fenced + Gap)^2, family='binomial', data=df2)
model2 <- step(model1)
summary(model2)
model3 <- glm(Response ~ (Treatment + Gap)^2, family='binomial', data=df2)
anova(model3, model2)
anova(model3, model2, test='Chi')
df <- read.csv('/Users/nickjolly/Desktop/tfn/DataScienceProject/Understorey/contingency tables/output/spcies_divers_quadrats.csv')
str(df)
df$Y6 <- as.numeric(df$X6>df$X0)
df$Y3 <- as.numeric(df$X3>df$X0)
df$Treatment <- factor(df$Treatment)
plot(df, pch='.')
model1 <- glm(Response ~ (Treatment + Fenced + Gap)^2, family='binomial', data=df)
model1 <- glm(Y6 ~ (Treatment + Fenced + Gap)^2, family='binomial', data=df)
summary(model1)
step(model1)
model2 <- step(model1)
summary(model2)
model3 <- glm(Response ~ (Treatment + Gap)^2, family='binomial', data=df2)
model3 <- glm(Response ~ (Treatment + Gap)^2, family='binomial', data=df)
model3 <- glm(Y3 ~ (Treatment + Fenced + Gap)^2, family='binomial', data=df)
summary(model3)
model4 <- step(model3)
summary(model4)
summary(model2)
model3 <- glm(Y3 ~ (Treatment + Fenced + Gap)^2, family='binomial', data=df)
model4 <- step(model3)
summary(model4)
model3 <- glm(Response ~ (Treatment + Gap)^2, family='binomial', data=df)
model1 <- glm(Y6 ~ (Treatment + Fenced + Gap)^2, family='binomial', data=df)
summary(model1)
model2 <- step(model1)
summary(model2)
model3 <- glm(Y3 ~ (Treatment + Fenced + Gap)^2, family='binomial', data=df)
summary(model3)
model4 <- step(model3)
summary(model4)
summary(model2)
model1 <- glm(X6 ~ (X0 + Treatment + Fenced + Gap)^2, family='binomial', data=df)
summary(model1)
model2 <- step(model1)
model1 <- glm(X6 ~ (X0 + Treatment + Fenced + Gap)^2, family='binomial', data=df)
glm(X6 ~ (X0+Treatment+Fenced+Gap)^2, data=df)
step(glm(X6 ~ (X0+Treatment+Fenced+Gap)^2, data=df))
m1 <- step(glm(X6 ~ (X0+Treatment+Fenced+Gap)^2, data=df))
summary(m1)
plot(m1)
# Load data
library(rstudioapi)
setwd(dirname(getActiveDocumentContext()$path))
# Load data
abundance_df <- read.csv('../dataset/tables/lf_abund_analysis.csv')
abundance_rel_df <- read.csv('../dataset/tables/lf_abund_rel_analysis.csv')
# Treatments, Plot numbers, Quadrat numbers, Life forms as factors
abundance_df$Treatment <- factor(abundance_df$Treatment)
abundance_df$Plot.Number <- factor(abundance_df$Plot.Number)
abundance_df$Quadrat.Number <- factor(abundance_df$Quadrat.Number)
abundance_df$Life.Form <- factor(abundance_df$Life.Form)
abundance_rel_df$Treatment <- factor(abundance_rel_df$Treatment)
abundance_rel_df$Plot.Number <- factor(abundance_rel_df$Plot.Number)
abundance_rel_df$Quadrat.Number <- factor(abundance_rel_df$Quadrat.Number)
abundance_rel_df$Life.Form <- factor(abundance_rel_df$Life.Form)
# Convert Fenced, Gap columns to boolean
abundance_df$Gap <- abundance_df$Gap=='True'
abundance_df$Fenced <- abundance_df$Fenced=='True'
abundance_rel_df$Gap <- abundance_rel_df$Gap=='True'
abundance_rel_df$Fenced <- abundance_rel_df$Fenced=='True'
# Relative Abundance: convert from proportion to percentage, and round to integer
# Note: Trace observations (below 1%) rounded up to 1%
abundance_rel_df$response <- abundance_rel_df$X0*100
abundance_rel_df[abundance_rel_df$response < 1 & abundance_rel_df$response != 0, 'response'] <- 1
abundance_rel_df$response <- round(abundance_rel_df$response)
# Weight for BIC
k <- log(length(abundance_rel_df$response))
model1 <- glm(response ~ (Treatment + Fenced + Gap + Life.Form + Year)^2,
family='poisson', data=abundance_rel_df)
summary(model1)
model2 <- step(model1)
summary(model2)
model3 <- glm(response ~ (Treatment + Fenced + Gap + Life.Form + factor(Year))^2,
family='poisson', data=abundance_rel_df)
model4 <- step(model3, k=k)
summary(model4)
