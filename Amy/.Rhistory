setwd("C:/Users/YUHONG/Documents/R/DataScienceProject")
setwd("/Users/nickjolly/Desktop/tfn/DataScienceProject")
# load data
data = read.csv("datasets/all_plots.csv", stringsAsFactors = FALSE)
setwd("/Users/nickjolly/Desktop/tfn/DataScienceProject")
# load data
data = read.csv("datasets/tree_dbh_hollows/output/all_plots.csv", stringsAsFactors = FALSE)
setwd("/Users/nickjolly/Desktop/tfn/DataScienceProject")
# load data
data = read.csv("datasets/tree_dbh_hollows/output/all_plots.csv", stringsAsFactors = FALSE)
summary(data)
sapply(data, typeof)
sapply(data[c(2,3,4,5,8,9,10,11,12,13,14,15)], unique)
DBHdata = data[1:9]
# blank "Large", assume "No" where it's blank
DBHdata[DBHdata$Large == "", "Tree.Number"]
DBHdata[DBHdata$Large == "", "Large"] = "No"
# blank "Alive.at.year.6"
DBHdata[DBHdata$Alive.at.year.6 == "", 1:7]
# 20 rows with blank "Alive.at.year.6" have valid values for "DBH.year.6", assume they have "Yes" for "Alive.at.year.6"
DBHdata[DBHdata$Alive.at.year.6 == "" & !(is.na(DBHdata$DBH.year.6)), "Alive.at.year.6"] = "Yes"
# the rest 8 rows with blank "Alive.at.year.6" have NA for "DBH.year.6", not sure whether the trees are not alive, or just missing records in year6, so no modification.
# NA in "DBH.year.6", no modification
DBHdata[is.na(DBHdata$DBH.year.6), 1:7]
# 9 NAs for "DBH.year.6", 8 rows are the rows where "Alive.at.year.6" is blank, and one exception.
# NA in "DBH.year.0", no modification
DBHdata[is.na(DBHdata$DBH.year.0), 1:7] # 2 NAs for "DBH.year.0"
# NA in "Class.year.0" and NA in "Class.year.6", no modification
DBHdata[is.na(DBHdata$Class.year.0) | is.na(DBHdata$Class.year.6), ]
# All NA appears where there's NA for DBH (2 in year0, 9 in year6), but 2 exceptions where there's valid values for DBH:
# both in Plot5(T2: Radial), Tree.Number 148, 149, they have extremely large DBH.
DBHdata$Tree.growth = DBHdata$DBH.year.6 - DBHdata$DBH.year.0
DBHdata[is.na(DBHdata$Tree.growth) | DBHdata$Tree.growth <= 0, ] # rows to be removed
DBHdata = DBHdata[!(is.na(DBHdata$Tree.growth)) & DBHdata$Tree.growth > 0, ]
DBHdata$Treatment = factor(DBHdata$Treatment)
DBHdata$Large = factor(DBHdata$Large)
summary(DBHdata$Tree.growth)
var(DBHdata$Tree.growth) # quite large variance, variance = twice mean
hist(DBHdata$Tree.growth, breaks = 50)
# super rough comparison
set.seed(0)
hist(DBHdata$Tree.growth, breaks = 50)
hist(rnorm(400, 1.5), breaks = 20, add = TRUE, col = "light blue")
# very skewed and long heavy tail compared to normal distribution
hist(log(DBHdata$Tree.growth), breaks = 50)
hist(rnorm(400, 0.5), breaks = 40, add = TRUE, col = "light blue")
# taking log seems to make the shape closer to normal, but still different from normal
library(fitdistrplus)
descdist(DBHdata$Tree.growth) # closer to gamma distribution
descdist(log(DBHdata$Tree.growth))
fitdis1 = fitdist(DBHdata$Tree.growth, "norm")
fitdis2 = fitdist(DBHdata$Tree.growth, "gamma")
summary(fitdis1); summary(fitdis2)
par(mfrow = c(2, 2))
denscomp(list(fitdis1, fitdis2), legendtext = c("Normal","Gamma"))
qqcomp(list(fitdis1, fitdis2), legendtext = c("Normal","Gamma"))
cdfcomp(list(fitdis1, fitdis2), legendtext = c("Normal","Gamma"))
ppcomp(list(fitdis1, fitdis2), legendtext = c("Normal","Gamma"))
# Gamma better describes "Tree.growth" than normal, but the positive tail still doesn't fit
fitdis3 = fitdist(log(DBHdata$Tree.growth), "norm")
summary(fitdis3)
par(mfrow = c(2, 2))
denscomp(fitdis3, legendtext = "Normal")
qqcomp(fitdis3, legendtext = "Normal")
cdfcomp(fitdis3, legendtext = "Normal")
ppcomp(fitdis3, legendtext = "Normal")
# log(Tree.growth) can roughly be normal
summary(DBHdata$DBH.year.0)
var(DBHdata$DBH.year.0) # quite large variance, variance = twice mean
hist(DBHdata$DBH.year.0, breaks = 100)
# super rough comparison
set.seed(0)
hist(DBHdata$DBH.year.0, breaks = 100)
hist(rnorm(400, 35, 5), breaks = 40, add = TRUE, col = "light blue")
# DBH.year.0 has too many values within 20-30 to fit a normal shape
descdist(DBHdata$DBH.year.0)
fitdis4 = fitdist(DBHdata$DBH.year.0, "norm")
summary(fitdis4)
par(mfrow = c(2, 2))
denscomp(fitdis4, legendtext = "Normal")
qqcomp(fitdis4, legendtext = "Normal")
cdfcomp(fitdis4, legendtext = "Normal")
ppcomp(fitdis4, legendtext = "Normal")
# DBH.yea.0 is not quite like normal distribution, its distribution is also quite different from Tree.growth
# curve shape in the QQplot->maybe some transformation will make it closer to normal
plot(DBHdata$DBH.year.0, DBHdata$Tree.growth, type = "p", xlab = "DBH.year.0", ylab = "Tree.growth")
plot(DBHdata$DBH.year.0, DBHdata$Tree.growth, type = "p", col = DBHdata$Treatment, xlim = c(20, 70), ylim = c(0, 8), xlab = "DBH.year.0", ylab = "Tree.growth(zoom in)")
legend("topright", legend = c("Control", "T1: Gap", "T2: Radial"), fill = c(1, 2, 3))
plot(DBHdata$DBH.year.0, DBHdata$Tree.growth, type = "p", col = DBHdata$Large, xlim = c(20, 70),ylim = c(0, 8), xlab = "DBH.year.0", ylab = "Tree.growth(zoom in)")
legend("topright", legend = c("not large", "large"), fill = c(1, 2))
par(mfrow = c(3, 4))
for (i in seq(1:12))
plot(DBHdata[DBHdata$Plot == i, "DBH.year.0"], DBHdata[DBHdata$Plot == i, "Tree.growth"], type = "p", col = DBHdata[DBHdata$Plot == i, "Treatment"], xlim = c(20, 70), ylim = c(0, 8), xlab = "DBH.year.0", ylab = paste("Plot", i, "Tree.growth"))
par(mfrow = c(3, 4))
for (i in seq(1:12))
plot(DBHdata[DBHdata$Plot == i, "DBH.year.0"], log(DBHdata[DBHdata$Plot == i, "Tree.growth"]), type = "p", col = DBHdata[DBHdata$Plot == i, "Treatment"], xlim = c(20, 70), ylim = c(-3, 3), xlab = "DBH.year.0", ylab = paste("Plot", i, "log growth"))
par(mfrow = c(1, 3))
for (i in c("Control", "T1: Gap", "T2: Radial"))
plot(DBHdata[DBHdata$Treatment == i, "DBH.year.0"], DBHdata[DBHdata$Treatment == i, "Tree.growth"], type = "p", col = DBHdata$Large, xlim = c(20, 70), ylim = c(0, 8), xlab = "DBH.year.0", ylab = paste(i, "Tree.growth"))
par(mfrow = c(1, 3))
for (i in c("Control", "T1: Gap", "T2: Radial"))
plot(DBHdata[DBHdata$Treatment == i, "DBH.year.0"], log(DBHdata[DBHdata$Treatment == i, "Tree.growth"]), type = "p", col = DBHdata$Large, xlim = c(20, 70), ylim = c(-3, 3), xlab = "DBH.year.0", ylab = paste(i, "log growth"))
# best model derived from Tree.growth~DBH.year.0*Large*Treatment
glm1.0 = glm(Tree.growth~-1+DBH.year.0+Large+DBH.year.0:Large+Treatment:Large, data = DBHdata)
summary(glm1.0)
tss = sum((DBHdata$Tree.growth-mean(DBHdata$Tree.growth))^2) #TSS
rss = sum((DBHdata$Tree.growth-fitted(glm1.0))^2) #RSS
tss; rss
(tss-rss)/tss #R^2
plot(glm1.0)
plot(DBHdata$Tree.growth, fitted(glm1.0), type = "p", col = DBHdata$Treatment)
abline(0, 1)
# better than glm1.0, with increased Rsquare value and much smaller and "flat" residuals, but still not a good enough model for Tree.growth
glm2.0 = glm(Tree.growth~Treatment+Large+DBH.year.0+Treatment:DBH.year.0+Large:DBH.year.0, family = "Gamma", data = DBHdata)
summary(glm2.0)
tss = sum((DBHdata$Tree.growth-mean(DBHdata$Tree.growth))^2) #TSS
rss = sum((DBHdata$Tree.growth-fitted(glm2.0))^2) #RSS
tss; rss
(tss-rss)/tss #R^2
plot(glm2.0)
plot(DBHdata$Tree.growth, fitted(glm2.0), type = "p", col = DBHdata$Treatment)
abline(0, 1)
# view instances marked as outliers in the residual plots and Cook's distance plots in both glm1.0 and glm2.0
DBHdata[c("198","141","393","96","81","156"), ] # 4 outof 6 has large Tree.growth > 8
DBHdrop = subset(DBHdata, !(Tree.Number == 225 | Tree.Number == 478 | Tree.Number == 496 | Tree.Number == 71 | Tree.Number == 77 | Tree.Number == 184))
glm1.1 = glm(Tree.growth~-1+DBH.year.0+Large+Treatment+DBH.year.0:Large+Treatment:Large, data = DBHdrop)
summary(glm1.1)
tss = sum((DBHdrop$Tree.growth-mean(DBHdrop$Tree.growth))^2) #TSS
rss = sum((DBHdrop$Tree.growth-fitted(glm1.1))^2) #RSS
tss; rss
(tss-rss)/tss #R^2
plot(glm1.1)
plot(DBHdrop$Tree.growth, fitted(glm1.1), type = "p", col = DBHdrop$Treatment)
abline(0, 1)
glm2.1 = glm(Tree.growth~Treatment+Large+DBH.year.0+Treatment:DBH.year.0+Large:DBH.year.0, family = "Gamma", data = DBHdrop)
summary(glm2.1)
tss = sum((DBHdrop$Tree.growth-mean(DBHdrop$Tree.growth))^2) #TSS
rss = sum((DBHdrop$Tree.growth-fitted(glm2.1))^2) #RSS
tss; rss
(tss-rss)/tss #R^2
plot(glm2.1)
plot(DBHdrop$Tree.growth, fitted(glm2.1), type = "p", col = DBHdrop$Treatment)
abline(0, 1)
DBHdrop[DBHdrop$Tree.growth >= 8, ]
DBHremove = DBHdrop[DBHdrop$Tree.growth < 8, ]
glm1.2 = glm(Tree.growth~Treatment+Large+DBH.year.0+Large:DBH.year.0+Treatment:Large, data = DBHremove)
summary(glm1.2)
tss = sum((DBHremove$Tree.growth-mean(DBHremove$Tree.growth))^2) #TSS
rss = sum((DBHremove$Tree.growth-fitted(glm1.2))^2) #RSS
tss; rss
(tss-rss)/tss #R^2
plot(glm1.2)
plot(DBHremove$Tree.growth, fitted(glm1.2), type = "p", col = DBHremove$Treatment)
abline(0, 1)
glm2.2 = glm(Tree.growth~Treatment+Large+DBH.year.0+Treatment:DBH.year.0+Large:DBH.year.0, family = "Gamma", data = DBHremove)
summary(glm2.2)
tss = sum((DBHremove$Tree.growth-mean(DBHremove$Tree.growth))^2) #TSS
rss = sum((DBHremove$Tree.growth-fitted(glm2.2))^2) #RSS
tss; rss
(tss-rss)/tss #R^2
plot(glm2.2)
plot(DBHremove$Tree.growth, fitted(glm2.2), type = "p", col = DBHremove$Treatment)
abline(0, 1)
library(lme4)
mixed1.0 = lmer(Tree.growth~DBH.year.0+Large+Treatment+DBH.year.0:Large+Treatment:Large+(DBH.year.0+Large+Treatment+DBH.year.0:Large+Treatment:Large|Plot), data = DBHdata)
summary(mixed1.0)
VarCorr(mixed1.0)
y.hat1.0 <- fitted(mixed1.0) # Fitted values
int.hat1.0 <- ranef(mixed1.0)[[1]][[1]] # Predicted intercepts
res.hat1.0 <- residuals(mixed1.0) # Estimated residuals
tss = sum((DBHdata$Tree.growth-mean(DBHdata$Tree.growth))^2) #TSS
rss = sum((DBHdata$Tree.growth-y.hat1.0)^2) #RSS
tss; rss; (tss-rss)/tss #R^2
qqnorm(int.hat1.0, main="Random Intercepts"); qqline(int.hat1.0)
qqnorm(res.hat1.0, main="Residuals"); qqline(res.hat1.0)
plot(y.hat1.0, res.hat1.0, xlab="Fitted Values", ylab="Residuals")
abline(h=0, lty=2)
plot(DBHdata$Tree.growth, y.hat1.0, col = DBHdata$Treatment)
abline(0, 1)
plot(DBHdata$Tree.growth, y.hat1.0, col = DBHdata$Large)
abline(0, 1)
mixed1.1 = lmer(Tree.growth~DBH.year.0+Large+Treatment+DBH.year.0:Large+Treatment:Large+(DBH.year.0+Large+Treatment+DBH.year.0:Large+Treatment:Large|Plot), data = DBHremove)
summary(mixed1.1)
VarCorr(mixed1.1)
y.hat1.1 <- fitted(mixed1.1) # Fitted values
int.hat1.1 <- ranef(mixed1.1)[[1]][[1]] # Predicted intercepts
res.hat1.1 <- residuals(mixed1.1) # Estimated residuals
tss = sum((DBHremove$Tree.growth-mean(DBHremove$Tree.growth))^2) #TSS
rss = sum((DBHremove$Tree.growth-y.hat1.1)^2) #RSS
tss; rss; (tss-rss)/tss #R^2
qqnorm(int.hat1.1, main="Random Intercepts"); qqline(int.hat1.1)
qqnorm(res.hat1.1, main="Residuals"); qqline(res.hat1.1)
plot(y.hat1.1, res.hat1.1, xlab="Fitted Values", ylab="Residuals")
abline(h=0, lty=2)
plot(DBHremove$Tree.growth, y.hat1.1, col = DBHremove$Treatment)
abline(0, 1)
plot(DBHremove$Tree.growth, y.hat1.1, col = DBHremove$Large)
abline(0, 1)
tree_growth = read_csv('/Users/nickjolly/Desktop/tfn/DataScienceProject/datasets/tree_DBH_hollows/output/all_plots.csv')
tree_growth = read.csv('/Users/nickjolly/Desktop/tfn/DataScienceProject/datasets/tree_DBH_hollows/output/all_plots.csv')
tree_growth = read.csv('/Users/nickjolly/Desktop/tfn/DataScienceProject/datasets/tree_DBH_hollows/output/all_plots.csv')
View(tree_growth)
tree = read.csv('/Users/nickjolly/Desktop/tfn/DataScienceProject/datasets/tree_DBH_hollows/output/all_plots.csv')
View(tree)
colnames(tree)
tree['diff'] = tree['DBH.year.6'] - tree['DBH.year.0']
tree=tree[c('Tree.Number', 'Plot', 'Treatment', 'Large', 'DBH.year.0')]
tree = read.csv('/Users/nickjolly/Desktop/tfn/DataScienceProject/datasets/tree_DBH_hollows/output/all_plots.csv')
colnames(tree)
tree['diff'] = tree['DBH.year.6'] - tree['DBH.year.0']
tree=tree[c('Tree.Number', 'Plot', 'Treatment', 'Large', 'DBH.year.0')]
colnames(tree)
tree = read.csv('/Users/nickjolly/Desktop/tfn/DataScienceProject/datasets/tree_DBH_hollows/output/all_plots.csv')
tree['diff'] = tree['DBH.year.6'] - tree['DBH.year.0']
colnames(tree)
tree=tree[c('Tree.Number', 'Plot', 'Treatment', 'Large', 'DBH.year.0', 'DBH.year.6', 'Class.year.0', 'class.year.6', 'diff')]
tree=tree[c('Tree.Number', 'Plot', 'Treatment', 'Large', 'DBH.year.0', 'DBH.year.6', 'Class.year.0', 'class.year.6', 'diff')]
tree=tree[,c('Tree.Number', 'Plot', 'Treatment', 'Large', 'DBH.year.0', 'DBH.year.6', 'Class.year.0', 'class.year.6', 'diff')]
tree=tree[c('Tree.Number', 'Plot', 'Treatment', 'Large', 'DBH.year.0')]
tree = read.csv('/Users/nickjolly/Desktop/tfn/DataScienceProject/datasets/tree_DBH_hollows/output/all_plots.csv')
tree['diff'] = tree['DBH.year.6'] - tree['DBH.year.0']
tree=tree[c('Tree.Number', 'Plot', 'Treatment', 'Large', 'DBH.year.0', 'DBH.year.6', 'Class.year.0', 'Class.year.6', 'diff')]
tree['diff']
tree = tree[tree['diff']>=0]
tree['diff']
tree = tree[tree['diff']!=NA]
tree['diff']
tree[tree['diff']!=NA]
tree = read.csv('/Users/nickjolly/Desktop/tfn/DataScienceProject/datasets/tree_DBH_hollows/output/all_plots.csv')
tree=tree[c('Tree.Number', 'Plot', 'Treatment', 'Large', 'DBH.year.0', 'DBH.year.6', 'Class.year.0', 'Class.year.6', 'diff')]
tree['diff'] = tree['DBH.year.6'] - tree['DBH.year.0']
tree['diff']
tree[tree['diff']!=NA]
tree['diff']
tree[!tree['diff']==NA]
tree['diff']==NA
tree['diff']
tree['diff']>0
tree = tree[tree['diff']>0,]
View(tree)
tree = tree[tree['diff']!=NA,]
View(tree)
tree = read.csv('/Users/nickjolly/Desktop/tfn/DataScienceProject/datasets/tree_DBH_hollows/output/all_plots.csv')
tree=tree[c('Tree.Number', 'Plot', 'Treatment', 'Large', 'DBH.year.0', 'DBH.year.6', 'Class.year.0', 'Class.year.6', 'diff')]
tree['diff'] = tree['DBH.year.6'] - tree['DBH.year.0']
tree['diff']
tree = tree[tree['diff']>0,]
tree = read.csv('/Users/nickjolly/Desktop/tfn/DataScienceProject/datasets/tree_DBH_hollows/output/all_plots.csv')
colnames(tree)
tree['Alive.at.year.6']
tree['Alive.at.year.6']=="Yes"
sum(tree['Alive.at.year.6']=="Yes")
sum(tree['Alive.at.year.6']==NA)
sum(tree['Alive.at.year.6']=="")
tree = tree[tree['diff']!=NA,]
tree['diff'] = tree['DBH.year.6'] - tree['DBH.year.0']
tree['diff']>0
sum(tree['diff']>=0)
sum(tree['diff']==0)
tree['diff']==0
isna(tree['diff'])
is.na(tree['diff'])
sum(is.na(tree['diff']))
tree[!is.na(tree['diff']),]
tree = tree[!is.na(tree['diff']),]
tree = read.csv('/Users/nickjolly/Desktop/tfn/DataScienceProject/datasets/tree_DBH_hollows/output/all_plots.csv')
tree['diff']
tree['diff'] = tree['DBH.year.6'] - tree['DBH.year.0']
sum(is.na(tree['diff']))
tree = tree[!is.na(tree['diff']),]
sum(tree['diff'] < 0)
hist(tree['diff'])
tree['diff']
hist(tree['diff'])
as.numeric(tree['diff'])
lapply(tree, as.numeric)
lapply(tree['diff'], as.numeric)
hist(lapply(tree['diff'], as.numeric))
hist(tree[,'diff']
hist(tree[,'diff'])
hist(tree[,'diff'])
qqplot(tree[,'diff'])
?qqplot
qqnorm(tree[,'diff'])
qqnorm(log(tree[,'diff']))
qqnorm(log(tree[,'diff']))
qqnorm(tree[,'diff'])
log(-1)
qqnorm(log(tree[,'diff']+30))
qqnorm(tree[,'diff'])
qqnorm(exp(tree[,'diff']))
qqnorm(tree[,'diff'])
hist(tree[,'diff'])
?qgevd
??qgevd
??dgevd
?evd
??evd
install.packages('eevd')
install.packages('GEVd')
install.packages('GEVD')
?dgumbel
??dgumbel
library(mgcv)
## simulate some data
f0 <- function(x) 2 * sin(pi * x)
f1 <- function(x) exp(2 * x)
f2 <- function(x) 0.2 * x^11 * (10 * (1 - x))^6 + 10 *
(10 * x)^3 * (1 - x)^10
n <- 400;set.seed(9)
x0 <- runif(n);x1 <- runif(n);
x2 <- runif(n);x3 <- runif(n);
mu <- f0(x0)+f1(x1)
beta <- exp(f2(x2)/5)
y <- mu - beta*log(-log(runif(n))) ## Gumbel quantile function
b <- gam(list(y~s(x0)+s(x1),~s(x2)+s(x3)),family=gumbls)
plot(b,pages=1,scale=0)
summary(b)
gam.check(b)
library(evd)
install.packages('evd')
library(evd)
library(evd)
seq(0,1,.1)
seq(0,1,.01)
plot(qgumbel(seq(0,1,.01)))
plot(qgumbel(seq(0.01,.99,.01)))
plot(qgumbel(seq(0.01,.99,.01))type='l')
plot(qgumbel(seq(0.01,.99,.01)), type='l')
plot(pgumbel(seq(0.01,.99,.01)), type='l')
plot(pgumbel(seq(-10,10,.01)), type='l')
plot(dgumbel(seq(-10,10,.01)), type='l')
plot(dgumbel(seq(-10,10,1)), type='l')
d
plot(dgumbel(seq(-10,10,.01)), type='l')
plot(dgumbel(seq(-10,10,.01), loc=-100), type='l')
plot(dgumbel(seq(-10,10,.01), loc=-50), type='l')
plot(dgumbel(seq(-10,10,.01), loc=1), type='l')
plot(dgumbel(seq(-10,10,.01), loc=-1), type='l')
plot(dgumbel(seq(-10,10,.01), loc=-3), type='l')
plot(x,dgumbel(seq(-10,10,.01), loc=-3), type='l')
plot(seq(-10,10,.01) ,dgumbel(seq(-10,10,.01), loc=-3), type='l')
plot(seq(-10,10,.01) ,dgumbel(seq(-10,10,.01), loc=0), type='l')
plot(seq(-10,10,.01) ,dgumbel(seq(-10,10,.01), loc=0, scale=2), type='l')
?qqplot
length(tree[,'diff'])
tree = read.csv('/Users/nickjolly/Desktop/tfn/DataScienceProject/datasets/tree_DBH_hollows/output/all_plots.csv')
tree['diff'] = tree['DBH.year.6'] - tree['DBH.year.0']
tree = tree[!is.na(tree['diff']),]
length(tree[,'diff'])
1/463
length(seq(0,1,.01))
length(seq(0,1,.0021))
length(seq(0,1,.002))
length(seq(0,1,.0022))
length(seq(0,1,.0023))
length(seq(0,1,.002))
length(seq(0,1,.00215))
length(seq(0,1,.002152))
length(seq(0,1,.002154))
length(seq(0,1,.002156))
length(seq(0,1,.002157))
length(seq(0,1,.002158))
length(seq(0,1,.002159))
length(seq(0,1,.00216))
qqplot(gumbel(seq(0,1,.00216)), treee[,'diff'])
qqplot(qgumbel(seq(0,1,.00216)), treee[,'diff'])
qqplot(qgumbel(seq(0,0.99,.00216)), treee[,'diff'])
qqplot(qgumbel(seq(0.1,0.9,.00216)), treee[,'diff'])
qqplot(qgumbel(seq(0.1,0.9,.00216)), tree[,'diff'])
qqplot(qgumbel(seq(0.1,0.9,.00216), loc=1), tree[,'diff'])
qqplot(qgumbel(seq(0.1,0.9,.00216), loc=1, scale=3), tree[,'diff'])
qqplot(qgumbel(seq(0.1,0.9,.00216), loc=00, scale=3), tree[,'diff'])
qqnorm(tree[,'diff'])
m1 <- lm(diff ~ factor(plot), data=tree)
diff = as.vector(tree[,'diff'])
diff = tree$diff
treatment = factor(tree$Treatment)
m1 <- lm(diff ~ factor(plot))
m1 <- lm(diff ~ treatment)
summary(model1)
summary(m1)
plot(m1)
plot(m1$residuals)
m2 <- lm(log(diff)~treatment)
m2 <- lm(log(diff+20)~treatment)
plot(m2$residuals)
library(lme4)
?lmer
plot = factor(tree$Plot)
lmer(diff ~ treatment + (treatment|plot))
m3 <- lmer(diff ~ treatment + (treatment|plot))
summary(m3)
m3 <- lmer(diff ~ treatment + (plot|treatment))
summary(m3)
summary(m3)
plot(m3)
large = factor(tree$Large)
m1 <- lm(diff ~ treatment*large)
summary(m1)
m1 <- lm(diff ~ treatment+large)
summary(m1)
anova(m1)
anova(m1, m2)
m2 <- lm(diff~treatment*large)
anova(m1, m2)
m3 <- lmer(diff ~ treatment + large + (treatment + large|plot))
large = factor(tree$Large)
large
tree['Large']
is.na(tree['Large'])
tree[is.na(tree['Large']), 'Large'] = 'No'
is.na(tree['Large'])
sum(is.na(tree['Large']))
m3 <- lmer(diff ~ treatment + large + (treatment + large|plot))
summary(m3)
m3 <- lmer(diff ~ treatment + large + (plot|treatment + large))
m3 <- lmer(diff ~ treatment * large + (plot|treatment + large))
m3 <- lmer(diff ~ treatment + large + (treatment + large|plot))
?isSingular
summary(m3)
qt(.9=5)
qt(.95)
qt(.95, 1)
qt(.975, 1)
